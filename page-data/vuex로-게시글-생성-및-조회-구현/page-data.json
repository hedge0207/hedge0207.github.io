{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/vuex로-게시글-생성-및-조회-구현","result":{"data":{"post":{"__typename":"MdxPost","slug":"/vuex로-게시글-생성-및-조회-구현","title":"Vuex로 게시글 생성 및 조회 구현","date":"10.01.2021","tags":[{"name":"Vue","slug":"vue"},{"name":"Vuex","slug":"vuex"}],"description":"Vuex로 게시글 생성 및 조회 구현","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Vuex로 게시글 생성 및 조회 구현\",\n  \"date\": \"2021-01-10T00:00:00.000Z\",\n  \"description\": \"Vuex로 게시글 생성 및 조회 구현\",\n  \"tags\": [\"Vue\", \"Vuex\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC870\\uD68C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PostList.vue\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<template>\\n  <div>\\n    <h1>Article List</h1>\\n    <ul>\\n      <li v-for=\\\"post in posts\\\" :key=\\\"`post_${post.id}`\\\">\\n        {{ post.title }}\\n      </li>\\n    </ul>\\n  </div>\\n</template>\\n\\n<script>\\nimport { mapState, mapActions } from 'vuex'\\nexport default {\\n  name: \\\"PostList\\\",\\n  computed: {\\n    ...mapState(['posts'])\\n  },\\n  methods: {\\n    ...mapActions(['fetchPosts'])\\n  },\\n  created() {\\n    this.fetchPosts()\\n  }\\n};\\n</script>\\n\\n<style>\\n</style>\\n\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"index.js\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import Vue from 'vue'\\nimport Vuex from 'vuex'\\n\\nimport axios from 'axios'\\n\\nimport router from '@/router'\\nimport SERVER from '@/aaa/bbb'\\n\\nVue.use(Vuex)\\n\\nexport default new Vuex.Store({\\n  state: {\\n    posts: []\\n  },\\n  getters: {\\n    config: state => ({ headers: { Authorization: `Token ${state.authToken}` } })\\n  },\\n  mutations: {\\n    GET_POSTS(state, posts) {\\n      state.posts = posts\\n    }\\n  },\\n  actions: {\\n    getPosts({ commit }) {\\n      axios.get(SERVER.URL + SERVER.ROUTES.postList)\\n        .then(res => commit('SET_ARTICLES', res.data))\\n        .catch(err => console.error(err))\\n    },\\n\\n    createPost({ getters }, postData) {\\n      axios.post(SERVER.URL + SERVER.ROUTES.createPost, postData, getters.config)\\n        .then(() => { \\n          router.push({ name: 'List' })\\n        })\\n        .catch(err => console.log(err.response.data))\\n    },\\n\\n  },\\n  modules: {\\n  }\\n})\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC0DD\\uC131\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CreatePost.vue\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<template>\\n  <div>\\n    <h1>\\uC0C8 \\uAE00 \\uC4F0\\uAE30<h1>\\n    <div>\\n      <label for=\\\"title\\\">title:</label>\\n      <input v-model=\\\"postData.title\\\" id=\\\"title\\\" type=\\\"text\\\" />\\n    </div>\\n    <div>\\n      <label for=\\\"content\\\">content:</label>\\n      <textarea v-model=\\\"postData.content\\\" id=\\\"content\\\" cols=\\\"30\\\" rows=\\\"10\\\"></textarea>\\n    </div>\\n    <div>\\n      <button @click=\\\"createPost(postData)\\\">\\uC791\\uC131\\uD558\\uAE30</button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport { mapActions } from 'vuex'\\nexport default {\\n  name: \\\"CreatePost\\\",\\n  data() {\\n    return {\\n      postData: {\\n        title: null,\\n        content: null,\\n      }\\n    }\\n  },\\n  methods: {\\n    ...mapActions(['createPost'])\\n  },\\n};\\n</script>\\n\\n<style>\\n</style>\\n\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"index.js\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import Vue from 'vue'\\nimport Vuex from 'vuex'\\n\\nimport axios from 'axios'\\n\\nimport router from '@/router'\\nimport SERVER from '@/aaa/bbb'\\n\\nVue.use(Vuex)\\n\\nexport default new Vuex.Store({\\n  state: {\\n    posts: []\\n  },\\n  getters: {\\n    config: state => ({ headers: { Authorization: `Token ${state.authToken}` } })\\n  },\\n  mutations: {\\n    GET_POSTS(state, posts) {\\n      state.posts = posts\\n    }\\n  },\\n  actions: {\\n    createPost({ getters }, postData) {\\n      axios.post(SERVER.URL + SERVER.ROUTES.createPost, postData, getters.config)\\n        .then(() => { \\n          router.push({ name: 'List' })\\n        })\\n        .catch(err => console.log(err.response.data))\\n    },\\n\\n  },\\n  modules: {\\n  }\\n})\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"게시글 조회 PostList.vue index.js 게시글 생성 CreatePost.vue index.js","timeToRead":1,"banner":null}},"pageContext":{"slug":"/vuex로-게시글-생성-및-조회-구현","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}