{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/django-더미-데이터-생성하기","result":{"data":{"post":{"__typename":"MdxPost","slug":"/django-더미-데이터-생성하기","title":"Django 더미 데이터 생성하기","date":"09.01.2021","tags":[{"name":"django","slug":"django"}],"description":"Django 더미 데이터 생성하기","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Django 더미 데이터 생성하기\",\n  \"date\": \"2021-01-09T00:00:00.000Z\",\n  \"description\": \"Django 더미 데이터 생성하기\",\n  \"tags\": [\"django\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"faker\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"faker\"), \"\\uC124\\uCE58\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ pip install faker\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"django_extension\"), \" \\uC124\\uCE58\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"shell plus\\uB97C \\uC4F0\\uAE30 \\uC704\\uD55C \\uAC83\\uC73C\\uB85C \\uC4F0\\uC9C0 \\uC54A\\uC744 \\uAC83\\uC774\\uB77C\\uBA74 \\uC124\\uCE58\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB418\\uACE0 \\uC544\\uB798\\uC758 \\uCF54\\uB4DC\\uB3C4 \\uCD94\\uAC00\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB41C\\uB2E4.\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ pip install django_extensions\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"settings.py\"), \" \\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"INSTALLED_APPS\"), \"\\uC5D0 \\uC544\\uB798 \\uCF54\\uB4DC\\uB97C \\uCD94\\uAC00(\\uC5ED\\uC2DC shell plus\\uB97C \\uC4F0\\uAE30 \\uC704\\uD55C \\uAC83)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"'djnago_extensions'\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774\\uC81C terminal \\uCC3D\\uC5D0\\uC11C \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC0AC\\uC6A9\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ python manage.py shell_plus\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"#\\uC544\\uB798\\uC5D0\\uC11C \\uC608\\uC2DC\\uB85C \\uB4E0 .text(), .name()\\uC678\\uC5D0\\uB3C4 \\uB2E4\\uC591\\uD55C \\uC635\\uC158\\uC774 \\uC788\\uB2E4.\\n>>>from faker import Faker\\n>>>f=Faker()\\n>>>f.text()\\n'Social common~~\\uC544\\uBB34\\uB9D0~~'\\n>>>f.name()\\n'\\uC544\\uBB34 \\uC774\\uB984'\\n\\n#\\uB9CC\\uC77C Article\\uC5D0 \\uC0C8\\uB85C\\uC6B4 \\uB370\\uC774\\uD130\\uB97C \\uCD94\\uAC00\\uD558\\uACE0 \\uC2F6\\uB2E4\\uBA74 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC785\\uB825\\uD574\\uC57C \\uD55C\\uB2E4.\\n>>>Article.objects.create(title=f.text(), content=f.text(), ...)\\n#\\uB9CC\\uC77C 100\\uAC1C\\uC758 fake\\uB370\\uC774\\uD130\\uB97C \\uB9CC\\uB4E4\\uACE0 \\uC2F6\\uB2E4\\uBA74 100\\uBC88 \\uC785\\uB825\\uD574\\uC57C \\uD55C\\uB2E4.\\n\\n#\\uADF8\\uB7EC\\uB098 \\uC774\\uB97C \\uB354 \\uC27D\\uAC8C \\uD558\\uB294 \\uBC29\\uBC95\\uC774 \\uC788\\uB2E4.\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"models.py\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from django.db import models\\nfrom faker import Faker  #import\\n\\nf = Faker()  #Faker\\uB97C \\uBCC0\\uC218\\uC5D0 \\uD560\\uB2F9\\n\\n\\nclass Article(models.Model):\\n    title = models.CharField(max_length=100)\\n    content = models.TextField()\\n    created_at = models.DateTimeField(auto_now_add=True)\\n    updated_at = models.DateTimeField(auto_now=True)\\n    \\n    # n\\uAC1C\\uC758 \\uB354\\uBBF8 \\uB370\\uC774\\uD130\\uB97C \\uB9CC\\uB4DC\\uB294 \\uD074\\uB808\\uC2A4 \\uBA54\\uC18C\\uB4DC\\n    # cls\\uB294 \\uD074\\uB808\\uC2A4 \\uBA54\\uC18C\\uB4DC\\uB97C \\uC815\\uC758\\uD55C \\uD074\\uB798\\uC2A4\\uAC00 \\uB4E4\\uC5B4\\uAC00\\uAC8C \\uB41C\\uB2E4. \\n    # \\uB458 \\uB2E4 \\uC778\\uC790 \\uC774\\uB984\\uC774\\uBBC0\\uB85C \\uC544\\uBB34\\uB807\\uAC8C\\uB098 \\uD574\\uB3C4 \\uB41C\\uB2E4.\\n    @classmethod\\n    def dummy(cls,n): \\n        for _ in range(n):\\n            cls.objects.create(\\n                title=f.name(),\\n                content=f.text()\\n            )\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD130\\uBBF8\\uB110 \\uCC3D\\uC5D0 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uC785\\uB825\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"#shell plus \\uC2E4\\uD589 \\uD6C4\\n>>> Article.dummy(10)\\n\\n#10\\uAC1C\\uC758 \\uB354\\uBBF8 \\uB370\\uC774\\uD130\\uAC00 \\uC0DD\\uC131\\uB41C\\uB2E4.\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bulk_create\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"faker\\uB97C \\uC4F0\\uC9C0 \\uC54A\\uACE0 \\uB354\\uBBF8\\uB370\\uC774\\uD130\\uB97C \\uC0DD\\uC131\\uD558\\uB294 \\uBC29\\uBC95, faker\\uC5D0 \\uBE44\\uD574 \\uC18D\\uB3C4\\uAC00 \\uB290\\uB824 \\uC798 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4.\")))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from django.db import models\\n\\nclass Article(models.Model):\\n    title = models.CharField(max_length=100)\\n    content = models.TextField()\\n    \\n    @classmethod\\n    def dummy(cls,n):\\n        articles = []\\n        for i in range(n):\\n            articles.append(cls(title=f'title-{i+1}', content=f'contentlorem ipsum')) #\\uC0DD\\uC131\\uD558\\uACE0 \\uC2F6\\uC740 \\uB300\\uB85C \\uB123\\uC73C\\uBA74 \\uB41C\\uB2E4.\\n        cls.objects.bulk_create(articles)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \">>> Article.dummy(10)\\n\\n#10\\uAC1C\\uC758 \\uB354\\uBBF8 \\uB370\\uC774\\uD130\\uAC00 \\uC0DD\\uC131\\uB41C\\uB2E4.\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"faker faker 설치 django_extension  설치 shell plus를 쓰기 위한 것으로 쓰지 않을 것이라면 설치하지 않아도 되고 아래의 코드도 추가하지 않아도 된다. settings.py  의  INSTALLED_APPS…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/django-더미-데이터-생성하기","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}