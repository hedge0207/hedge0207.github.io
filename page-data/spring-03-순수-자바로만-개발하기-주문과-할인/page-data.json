{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/spring-03-순수-자바로만-개발하기-주문과-할인","result":{"data":{"post":{"__typename":"MdxPost","slug":"/spring-03-순수-자바로만-개발하기-주문과-할인","title":"Spring-03.순수 자바로만 개발하기-주문과 할인","date":"12.01.2021","tags":[{"name":"Spring","slug":"spring"}],"description":"Spring-03.순수 자바로만 개발하기-주문과 할인","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spring-03.순수 자바로만 개발하기-주문과 할인\",\n  \"date\": \"2021-01-12T00:00:00.000Z\",\n  \"description\": \"Spring-03.순수 자바로만 개발하기-주문과 할인\",\n  \"tags\": [\"Spring\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uC8FC\\uBB38\\uACFC \\uD560\\uC778 \\uC608\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC694\\uAD6C\\uC0AC\\uD56D\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD68C\\uC6D0\\uC740 \\uC0C1\\uD488\\uC744 \\uC8FC\\uBB38\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD68C\\uC6D0 \\uB4F1\\uAE09\\uC5D0 \\uB530\\uB77C \\uD560\\uC778 \\uC815\\uCC45\\uC744 \\uC801\\uC6A9\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD560\\uC778 \\uC815\\uCC45\\uC740 \\uBAA8\\uB4E0 VIP\\uC5D0\\uAC8C  1000\\uC6D0\\uC744 \\uD560\\uC778\\uD574\\uC8FC\\uB294 \\uC815\\uCC45\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD560\\uC778 \\uC815\\uCC45\\uC740 \\uBCC0\\uACBD \\uAC00\\uB2A5\\uC131\\uC774 \\uB192\\uC73C\\uBA70 \\uCD5C\\uC545\\uC758 \\uACBD\\uC6B0 \\uD560\\uC778\\uC744 \\uC801\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC744 \\uC218 \\uB3C4 \\uC788\\uB2E4.\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC1C\\uBC1C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"discount \\uD328\\uD0A4\\uC9C0 \\uC0DD\\uC131\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DiscountPolicy.java\"), \" \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.discount;\\n\\nimport start.first.member.Member;\\n\\npublic interface DiscountPolicy {\\n\\n    int discount(Member member, int price);\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FixDiscountPolicy.java\"), \" \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.discount;\\n\\nimport start.first.member.Grade;\\nimport start.first.member.Member;\\n\\npublic class FixDiscountPolicy implements DiscountPolicy{\\n\\n    private int discoutFixAmount = 1000;\\n\\n    @Override\\n    public int discount(Member member, int price) {\\n        //enum\\uC740 ==\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC \\uBE44\\uAD50\\uD55C\\uB2E4.\\n        if(member.getGrade()== Grade.VIP){\\n            return discoutFixAmount;\\n        }else{\\n            return 0;\\n        }\\n\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"order \\uD328\\uD0A4\\uC9C0 \\uC0DD\\uC131\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Order.java\"), \" \\uC0DD\\uC131\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.order;\\n\\npublic class Order {\\n\\n    private Long memberId;\\n    private String itemName;\\n    private int itemPrice;\\n    private int discountPrice;\\n    \\n    //\\uC0DD\\uC131\\uC790\\n    public Order(Long memberId, String itemName, int itemPrice, int discountPrice) {\\n        this.memberId = memberId;\\n        this.itemName = itemName;\\n        this.itemPrice = itemPrice;\\n        this.discountPrice = discountPrice;\\n    }\\n    \\n    //\\uD560\\uC778\\uAC00 \\uACC4\\uC0B0\\n    public int calculatePrice(){\\n        return itemPrice-discountPrice;\\n    }\\n\\n    //\\uCD9C\\uB825\\uC6A9 \\uBA54\\uC11C\\uB4DC, alt+insert \\uBC84\\uD2BC\\uC744 \\uB204\\uB974\\uACE0 toString\\uC744 \\uC120\\uD0DD\\uD558\\uBA74 \\uC790\\uB3D9\\uC0DD\\uC131 \\uD574\\uC900\\uB2E4.\\n    @Override\\n    public String toString() {\\n        return \\\"Order{\\\" +\\n                \\\"memberId=\\\" + memberId +\\n                \\\", itemName='\\\" + itemName + '\\\\'' +\\n                \\\", itemPrice=\\\" + itemPrice +\\n                \\\", discountPrice=\\\" + discountPrice +\\n                '}';\\n    }\\n\\n    //getter/setter\\n    public Long getMemberId() {\\n        return memberId;\\n    }\\n\\n    public void setMemberId(Long memberId) {\\n        this.memberId = memberId;\\n    }\\n\\n    public String getItemName() {\\n        return itemName;\\n    }\\n\\n    public void setItemName(String itemName) {\\n        this.itemName = itemName;\\n    }\\n\\n    public int getItemPrice() {\\n        return itemPrice;\\n    }\\n\\n    public void setItemPrice(int itemPrice) {\\n        this.itemPrice = itemPrice;\\n    }\\n\\n    public int getDiscountPrice() {\\n        return discountPrice;\\n    }\\n\\n    public void setDiscountPrice(int discountPrice) {\\n        this.discountPrice = discountPrice;\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD14C\\uC2A4\\uD2B8\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC29\\uBC951: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderApp.java\"), \" \")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.order;\\n\\nimport start.first.member.Grade;\\nimport start.first.member.Member;\\nimport start.first.member.MemberService;\\nimport start.first.member.MemberServiceImpl;\\n\\npublic class OrderApp {\\n    public static void main(String[] args) {\\n        MemberService memberService = new MemberServiceImpl();\\n        OrderService orderService = new OrderServiceImpl();\\n\\n        Long memberId = 1L;\\n        Member member = new Member(memberId, \\\"memberA\\\", Grade.VIP);\\n        memberService.join(member);\\n\\n        Order order = orderService.createOrder(memberId,\\\"itemA\\\",10000);\\n\\n        System.out.println(\\\"order: \\\" + order);\\n        //order: Order{memberId=1, itemName='itemA', itemPrice=10000, discountPrice=1000}\\n        System.out.println(\\\"calculate price: \\\" + order.calculatePrice());\\n        //calculate price: 9000\\n    }\\n}\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC29\\uBC952: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceTest.java\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.order;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.Test;\\nimport start.first.member.Grade;\\nimport start.first.member.Member;\\nimport start.first.member.MemberService;\\nimport start.first.member.MemberServiceImpl;\\n\\npublic class OrderServiceTest {\\n\\n    MemberService memberService = new MemberServiceImpl();\\n    OrderService orderService = new OrderServiceImpl();\\n\\n    @Test\\n    void createOrder(){\\n        Long memberId = 1L;\\n        Member member = new Member(memberId,\\\"memberA\\\", Grade.VIP);\\n        memberService.join(member);\\n\\n        Order order = orderService.createOrder(memberId,\\\"item1\\\",10000);\\n        Assertions.assertThat(order.getDiscountPrice()).isEqualTo(1000);\\n\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC5EC\\uAE30\\uAE4C\\uC9C0 \\uC644\\uB8CC \\uB418\\uC5C8\\uC744 \\uB54C \\uACE0\\uC815\\uC801\\uC73C\\uB85C 1000\\uC6D0\\uC744 \\uAE4E\\uC544\\uC8FC\\uB294 \\uAC83\\uC774 \\uC544\\uB2CC \\uC77C\\uC815 \\uBE44\\uC728\\uC744 \\uD560\\uC778\\uD574 \\uC8FC\\uB3C4\\uB85D \\uCF54\\uB4DC\\uB97C \\uBCC0\\uACBD\\uD574\\uC57C \\uD55C\\uB2E4\\uBA74 \\uC704 \\uCF54\\uB4DC\\uB97C \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC218\\uC815\\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rateDiscountPolicy.java\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.discount;\\n\\nimport start.first.member.Grade;\\nimport start.first.member.Member;\\n\\npublic class RateDiscountPolicy implements DiscountPolicy{\\n\\n    private int discountPercent = 10;\\n\\n    @Override\\n    public int discount(Member member, int price) {\\n        if(member.getGrade()== Grade.VIP){\\n            return price*discountPercent/100;\\n        }else{\\n            return 0;\\n        }\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD14C\\uC2A4\\uD2B8\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rateDiscountPolicyTest.java\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.discount;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport start.first.member.Grade;\\nimport start.first.member.Member;\\n\\nclass RateDiscountPolicyTest {\\n\\n    RateDiscountPolicy discountPolicy = new RateDiscountPolicy();\\n    \\n    //\\uC131\\uACF5 \\uD14C\\uC2A4\\uD2B8\\n    @Test\\n    //JUnit5\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \\uAE30\\uB2A5\\uC73C\\uB85C \\uD130\\uBBF8\\uB110 \\uCC3D\\uC5D0 \\uC544\\uB798 \\uC791\\uC131\\uD55C \\uB0B4\\uC6A9\\uC73C\\uB85C \\uD14C\\uC2A4\\uD2B8\\uBA85\\uC774 \\uCD9C\\uB825\\uB41C\\uB2E4.\\n    @DisplayName(\\\"VIP\\uB294 10% \\uD560\\uC778\\uC774 \\uC801\\uC6A9\\uB418\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\\\")\\n    void dis(){\\n        //given\\n        Member member = new Member(1L,\\\"memberVIP\\\", Grade.VIP);\\n\\n        //when\\n        int discount = discountPolicy.discount(member,10000);\\n\\n        //then\\n        Assertions.assertThat(discount).isEqualTo(1000);\\n    }\\n\\n    //\\uC2E4\\uD328 \\uD14C\\uC2A4\\uD2B8\\n    @Test\\n    @DisplayName(\\\"VIP\\uAC00 \\uC544\\uB2C8\\uBA74 \\uD560\\uC778\\uC774 \\uC801\\uC6A9\\uB418\\uC9C0 \\uC54A\\uC544\\uC57C \\uD55C\\uB2E4.\\\")\\n    void dontDis(){\\n        //given\\n        //VIP\\uAC00 \\uC544\\uB2CC BASIC\\uC73C\\uB85C \\uC0DD\\uC131\\n        Member member = new Member(2L,\\\"memberBASIC\\\", Grade.BASIC);\\n\\n        //when\\n        int discount = discountPolicy.discount(member,10000);\\n\\n        //then\\n        //VIP\\uAC00 \\uC544\\uB2C8\\uBBC0\\uB85C 1000\\uC6D0\\uC774 \\uC544\\uB2CC 0\\uC6D0\\uC774 \\uB418\\uC5B4\\uC57C \\uD55C\\uB2E4.\\n        Assertions.assertThat(discount).isEqualTo(1000);\\n    }\\n    //\\uC704 \\uC2E4\\uD328 \\uD14C\\uC2A4\\uD2B8\\uB97C \\uC9C4\\uD589\\uD558\\uBA74 \\uC5D0\\uB7EC \\uBA54\\uC138\\uC9C0 \\uC544\\uB798\\uC5D0 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uB72C\\uB2E4.\\n    //Expected :1000\\n    //Actual   :0\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBCC0\\uACBD\\uB41C \\uD560\\uC778 \\uC815\\uCC45 \\uC801\\uC6A9\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceImpl.java\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.order;\\n\\nimport start.first.discount.DiscountPolicy;\\nimport start.first.discount.FixDiscountPolicy;\\nimport start.first.discount.RateDiscountPolicy;\\nimport start.first.member.Member;\\nimport start.first.member.MemberRepository;\\nimport start.first.member.MemoryMemberRepository;\\n\\npublic class OrderServiceImpl implements OrderService{\\n    private final MemberRepository memberRepository = new MemoryMemberRepository();\\n    \\n    //\\uACE0\\uC815 \\uD560\\uC778\\uC5D0\\uC11C\\n    //private final DiscountPolicy discountPolicy = new FixDiscountPolicy();\\n    //\\uBE44\\uC6B8 \\uD560\\uC778\\uC73C\\uB85C \\uC218\\uC815\\n    private final DiscountPolicy discountPolicy = new RateDiscountPolicy();\\n\\n    @Override\\n    public Order createOrder(Long memberId, String itemName, int itemPrice) {\\n        Member member = memberRepository.findById(memberId);\\n        int discountPrice = discountPolicy.discount(member, itemPrice);\\n        return new Order(memberId,itemName,itemPrice,discountPrice);\\n    }\\n}\\n\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC81C\\uC810\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OCP, DIP\\uC640 \\uAC19\\uC740 \\uAC1D\\uCCB4 \\uC9C0\\uD5A5 \\uC124\\uACC4 \\uC6D0\\uCE59\\uC744 \\uC900\\uC218\\uD558\\uC9C0 \\uBABB\\uD588\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceImpl.java\"), \"\\uB294 \\uCD94\\uC0C1(\\uC778\\uD130\\uD398\\uC774\\uC2A4)\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DiscountPolicy\"), \"\\uC5D0 \\uC758\\uC874\\uD568\\uACFC \\uB3D9\\uC2DC\\uC5D0 \\uAD6C\\uD604\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FixDiscountPolicy\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RateDiscountPolicy\"), \"\\uC5D0\\uB3C4 \\uC758\\uC874\\uD55C\\uB2E4. \\uB530\\uB77C\\uC11C DCP \\uC704\\uBC18\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704\\uC5D0\\uC11C \\uBCC0\\uACBD\\uB41C \\uD560\\uC778 \\uC815\\uCC45\\uC744 \\uC801\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uCD94\\uC0C1\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DiscountPolicy\"), \"\\uB97C \\uD655\\uC7A5\\uD558\\uC5EC \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RateDiscountPolicy\"), \"\\uB97C \\uC0DD\\uC131\\uD558\\uB294 \\uAC83\\uC5D0\\uC11C \\uADF8\\uCE58\\uB294 \\uAC83\\uC774 \\uC544\\uB2C8\\uB77C \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceImpl.java\"), \" \\uB3C4 \\uD568\\uAED8 \\uC218\\uC815\\uD574\\uC57C \\uD588\\uB2E4. \\uB530\\uB77C\\uC11C OCP\\uC704\\uBC18\\uC774\\uB2E4.\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD574\\uACB0\\uACFC \\uADF8\\uC5D0 \\uB530\\uB978 \\uB610 \\uB2E4\\uB978 \\uBB38\\uC81C\\uC810\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceImpl\"), \"\\uC774 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DiscountPolicy\"), \"\\uC5D0\\uB9CC \\uC758\\uC874\\uD558\\uB3C4\\uB85D \\uBCC0\\uACBD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceImpl.java\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.order;\\n\\nimport start.first.discount.DiscountPolicy;\\nimport start.first.discount.FixDiscountPolicy;\\nimport start.first.discount.RateDiscountPolicy;\\nimport start.first.member.Member;\\nimport start.first.member.MemberRepository;\\nimport start.first.member.MemoryMemberRepository;\\n\\npublic class OrderServiceImpl implements OrderService{\\n    private final MemberRepository memberRepository = new MemoryMemberRepository();\\n//    private final DiscountPolicy discountPolicy = new FixDiscountPolicy();\\n//    private final DiscountPolicy discountPolicy = new RateDiscountPolicy();\\n    //\\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uCD94\\uC0C1\\uC5D0\\uB9CC \\uC758\\uC874\\uD558\\uB3C4\\uB85D \\uBCC0\\uACBD\\n    private DiscountPolicy discountPolicy;\\n    //\\uADF8\\uB7EC\\uB098 \\uC774 \\uCF54\\uB4DC\\uB97C \\uC2E4\\uD589\\uD558\\uBA74 \\uAD6C\\uD604\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uAE30\\uC5D0 `NullPointException` error\\uAC00 \\uBC1C\\uC0DD\\uD55C\\uB2E4.\\n\\n    @Override\\n    public Order createOrder(Long memberId, String itemName, int itemPrice) {\\n        Member member = memberRepository.findById(memberId);\\n        int discountPrice = discountPolicy.discount(member, itemPrice);\\n        //\\uAD6C\\uD604\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uAE30\\uC5D0 \\uC704 \\uCF54\\uB4DC\\uAC00 \\uC544\\uB798 \\uCF54\\uB4DC\\uC640 \\uAC19\\uC544\\uC9C4\\uB2E4.\\n        //int discountPrice = null.discount(member, itemPrice);\\n        //null\\uC5D0 discoumt\\uB77C\\uB294 \\uBA54\\uC18C\\uB4DC\\uB294 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC73C\\uBBC0\\uB85C error\\uAC00 \\uBC1C\\uC0DD\\n        return new Order(memberId,itemName,itemPrice,discountPrice);\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC644\\uC804\\uD55C \\uD574\\uACB0\\uBC95\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB204\\uAD70\\uAC00\\uAC00 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"OrderServiceImpl\"), \"\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DiscountPolicy\"), \"\\uC758 \\uAD6C\\uD604 \\uAC1D\\uCCB4\\uB97C \\uB300\\uC2E0 \\uC0DD\\uC131\\uD558\\uACE0 \\uC8FC\\uC785\\uD574\\uC8FC\\uC5B4\\uC57C \\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAD00\\uC2EC\\uC0AC\\uC758 \\uBD84\\uB9AC \\uCC38\\uC870\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, \"\\uC2A4\\uD504\\uB9C1 \\uD575\\uC2EC \\uC6D0\\uB9AC - \\uAE30\\uBCF8\\uD3B8, \\uAE40\\uC601\\uD55C, \\uC778\\uD504\\uB7F0\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"주문과 할인 예제 요구사항 회원은 상품을 주문할 수 있다. 회원 등급에 따라 할인 정책을 적용할 수 있다. 할인 정책은 모든 VIP에게  100…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/spring-03-순수-자바로만-개발하기-주문과-할인","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}