{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/django로-투표-기능-구현하기","result":{"data":{"post":{"__typename":"MdxPost","slug":"/django로-투표-기능-구현하기","title":"Django로 투표 기능 구현하기","date":"09.01.2021","tags":[{"name":"django","slug":"django"}],"description":"Django로 투표 기능 구현하기","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Django로 투표 기능 구현하기\",\n  \"date\": \"2021-01-09T00:00:00.000Z\",\n  \"description\": \"Django로 투표 기능 구현하기\",\n  \"tags\": [\"django\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uD22C\\uD45C \\uAD6C\\uD604 \\uBC29\\uBC95\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"models.py\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"class Poll(models.Model):\\n    title = models.CharField(max_length=100)\\n    red = models.CharField(max_length=100)\\n    blue = models.CharField(max_length=100)\\n# red\\uC640 blue\\uB77C\\uB294 2\\uAC1C\\uC758 \\uC120\\uD0DD\\uC9C0\\uAC00 \\uB420 charfield\\uB97C \\uB118\\uACA8\\uC8FC\\uACE0\\n\\nclass Comment(models.Model):\\n    text = models.CharField(max_length=100)\\n    poll = models.ForeignKey(Poll,on_delete=models.CASCADE)\\n    pick = models.BooleanField()\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"forms.py\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from django import forms\\nfrom .models import Poll, Comment\\n\\nclass PollForm(forms.ModelForm):\\n    class Meta:\\n        model=Poll\\n        fields=\\\"__all__\\\"\\n\\nclass CommentForm(forms.ModelForm):\\n    CHOICES = (        \\n        (False,'Blue'),\\n        (True,'Red'),\\n    )\\n    pick = forms.ChoiceField(choices=CHOICES)\\n    #choicefield\\uB97C \\uC124\\uC815\\n    class Meta:\\n        model=Comment\\n        fields=['text','pick']\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"views.py\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"#create \\uD398\\uC774\\uC9C0\\uC640 index \\uD398\\uC774\\uC9C0\\uB294 \\uC0DD\\uB7B5\\ndef detail(request,pk):\\n    poll = Poll.objects.get(pk=pk)\\n    comments = poll.comment_set.all()\\n    comment_form = CommentForm()\\n    cnt=comments.count()\\n    if cnt:  #if \\uB85C \\uBD84\\uAE30\\uB97C \\uD55C \\uC774\\uC720\\uB294 cnt\\uAC00 0\\uC77C \\uACBD\\uC6B0 0\\uC73C\\uB85C \\uB098\\uB220 zero divide\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD558\\uAE30 \\uB54C\\uBB38\\n        blue=comments.filter(pick=False).count()  #blue\\uC758 \\uAC1C\\uC218\\uC640\\n        red=cnt-blue    #red\\uC758 \\uAC1C\\uC218\\n        rred=100-int(blue/cnt*100)  #red\\uC758 \\uBE44\\uC728\\uACFC\\n        rblue=100-rred  #blue\\uC758 \\uBE44\\uC728\\uC744 \\uBAA8\\uB450 \\uB118\\uACA8\\uC900\\uB2E4.\\n    else:\\n        rred=0\\n        rblue=0\\n    context = {\\n        'poll':poll,\\n        'comments':comments,\\n        'comment_form':comment_form,\\n        'rred':rred,\\n        'rblue':rblue,\\n        'blue':blue,\\n        'red':red,\\n    }\\n    return render(request,\\\"detail.html\\\",context)\\n\\ndef comment_create(request,poll_pk):\\n    comment_form = CommentForm(request.POST)\\n    poll = Poll.objects.get(pk=poll_pk)\\n    if comment_form.is_valid():\\n        comment=comment_form.save(commit=False)\\n        comment.poll=poll\\n        comment.save()\\n    return redirect(\\\"poll:detail\\\", poll_pk)\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"detail.html\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!DOCTYPE html>\\n{% load bootstrap4 %}\\n<!--bootstrap\\uC5D0\\uC11C progress-bar\\uB97C \\uAC00\\uC838\\uC640 progress-bar\\uB85C \\uD45C\\uC2DC\\uD574\\uC900\\uB2E4.-->\\n<html lang=\\\"kr\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\\\" integrity=\\\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\\\" crossorigin=\\\"anonymous\\\">\\n    <title>Document</title>\\n</head>\\n<body>\\n    <h1>{{poll.title}}</h1>\\n    <p>{{poll.red}} VS {{poll.blue}}</p>\\n    <a href=\\\"{% url 'poll:index' %}\\\">\\uB4A4\\uB85C\\uAC00\\uAE30</a>\\n    <div class=\\\"progress\\\">\\n      <div class=\\\"progress-bar progress-bar-striped\\\" role=\\\"progressbar\\\" style=\\\"width: {{rblue}}%\\\" aria-valuenow=\\\"10\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"><div>{{poll.blue}}{{rblue}}%({{blue}}\\uBA85)</div></div>\\n      <div class=\\\"progress-bar progress-bar-striped bg-danger\\\" role=\\\"progressbar\\\" style=\\\"width: {{rred}}%\\\" aria-valuenow=\\\"100\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"><div>{{poll.red}}{{rred}}%({{red}}\\uBA85)</div></div>\\n    </div>\\n    <h3>\\uB313\\uAE00</h3>\\n    <form action=\\\"{% url 'poll:comment_create' poll.pk %}\\\" method=POST>\\n        {% csrf_token %}\\n        {% bootstrap_form comment_form %}\\n        <button>\\uB313\\uAE00\\uC4F0\\uAE30</button>\\n    </form>\\n\\n    {% for comment in comments %}\\n        <p>{{comment.text}}</p>\\n        <p>{{comment.pick}}</p>\\n        <hr>\\n    {% endfor %}\\n    <script src=\\\"https://code.jquery.com/jquery-3.4.1.slim.min.js\\\" integrity=\\\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\\\" crossorigin=\\\"anonymous\\\"></script>\\n<script src=\\\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\\\" integrity=\\\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\\\" crossorigin=\\\"anonymous\\\"></script>\\n<script src=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\\\" integrity=\\\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\\\" crossorigin=\\\"anonymous\\\"></script>\\n</body>\\n</html>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"투표 구현 방법 models.py forms.py views.py detail.html","timeToRead":1,"banner":null}},"pageContext":{"slug":"/django로-투표-기능-구현하기","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}