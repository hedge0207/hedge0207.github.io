{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/java-10-예외처리","result":{"data":{"post":{"__typename":"MdxPost","slug":"/java-10-예외처리","title":"Java-10.예외처리","date":"15.01.2021","tags":[{"name":"Java","slug":"java"}],"description":"Java-10.예외처리","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Java-10.예외처리\",\n  \"date\": \"2021-01-15T01:44:32.169Z\",\n  \"description\": \"Java-10.예외처리\",\n  \"tags\": [\"Java\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC608\\uC678 \\uC0C1\\uD669\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package first;\\n\\npublic class ExeptionExam {\\n    \\n    public static void main(String[] args) {\\n        int a = 0;\\n        int b = 10;\\n        int c = b/a;\\n        System.out.println(c);\\n        //Exception in thread \\\"main\\\" java.lang.ArithmeticException: / by zero\\n        //\\uD30C\\uC774\\uC36C\\uACFC \\uB9C8\\uCC2C\\uAC00\\uC9C0\\uB85C 0\\uC73C\\uB85C \\uB098\\uB204\\uB824\\uACE0 \\uD560 \\uACBD\\uC6B0 Exception\\uC774 \\uBC1C\\uC0DD\\uD55C\\uB2E4.\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try\"), \" - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catch\"), \" - \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"finally\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"try: \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD560 \\uC218 \\uC788\\uB294 \\uBD80\\uBD84\\uC744 \\uC791\\uC131\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catch: \\uC608\\uC678 \\uBC1C\\uC0DD\\uC2DC \\uC2E4\\uD589\\uD560 \\uCF54\\uB4DC\\uB97C \\uC791\\uC131\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC1C\\uC0DD\\uD560 \\uC218 \\uC788\\uB294 \\uC608\\uC678 \\uD074\\uB798\\uC2A4\\uC758 \\uC774\\uB984\\uACFC \\uC608\\uC678 \\uC815\\uBCF4\\uB97C \\uB2F4\\uC744 \\uBCC0\\uC218\\uBA85\\uC744 \\uC801\\uB294\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBAA8\\uB4E0 \\uC608\\uC678 \\uD074\\uB798\\uC2A4\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exception\"), \" \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D \\uBC1B\\uB294\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB530\\uB77C\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"catch(Exception \\uBCC0\\uC218\\uBA85)\"), \"\\uACFC \\uAC19\\uC774 \\uC801\\uC73C\\uBA74 \\uD2B9\\uC815 \\uC608\\uC678\\uAC00 \\uC544\\uB2CC \\uBAA8\\uB4E0 \\uC608\\uC678\\uB97C \\uCC98\\uB9AC \\uD560\\uC218 \\uC788\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBCF5\\uC218\\uC758 catch \\uBE14\\uB85D\\uC744 \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"finally: \\uC608\\uC678 \\uC0C1\\uD669 \\uBC1C\\uC0DD \\uC5EC\\uBD80\\uC640 \\uBB34\\uAD00\\uD558\\uAC8C \\uC2E4\\uD589\\uD560 \\uCF54\\uB4DC\\uB97C \\uC791\\uC131, \\uC0DD\\uB7B5 \\uAC00\\uB2A5\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package first;\\n\\npublic class ExeptionExam {\\n    \\n    public static void main(String[] args) {\\n        int a = 0;\\n        int b = 10;\\n        \\n        try{\\n        int c = b/a;\\n        System.out.println(c);\\n        //catch\\uB294 \\uC544\\uB798\\uC640 \\uAC19\\uC774 catch(\\uBC1C\\uC0DD\\uD560 \\uC218 \\uC788\\uB294 \\uC608\\uC678 \\uD074\\uB798\\uC2A4)\\uD615\\uC2DD\\uC73C\\uB85C \\uC801\\uB294\\uB2E4. \\uBCC0\\uC218\\uC5D0\\uB294 \\uC608\\uC678 \\uB0B4\\uC6A9\\uC774 \\uB4E4\\uC5B4\\uAC00\\uAC8C \\uB41C\\uB2E4.\\n        //catch(Exception e)\\uB85C \\uC801\\uC73C\\uBA74 ArithmeticException \\uBFD0 \\uC544\\uB2C8\\uB77C \\uBAA8\\uB4E0 \\uC608\\uC678\\uAC00 \\uC5EC\\uAE30\\uC11C \\uAC78\\uB9AC\\uAC8C \\uB41C\\uB2E4.\\n        }catch(ArithmeticException e){\\n            System.out.println(e);  \\n            //java.lang.ArithmeticException: / by zero\\n            System.out.println(\\\"0\\uC73C\\uB85C \\uB098\\uB20C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\\\"+e.toString());  \\n            //0\\uC73C\\uB85C \\uB098\\uB20C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.java.lang.ArithmeticException: / by zero\\n        }finally {\\n            System.out.println(\\\"\\uC5B4\\uB5A4 \\uACBD\\uC6B0\\uB4E0 \\uC2E4\\uD589\\uB418\\uB294 \\uCF54\\uB4DC\\\");\\n            //\\uC5B4\\uB5A4 \\uACBD\\uC6B0\\uB4E0 \\uC2E4\\uD589\\uB418\\uB294 \\uCF54\\uB4DC\\n        }\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Throws\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC608\\uC678\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC744 \\uACBD\\uC6B0 \\uC608\\uC678\\uB97C \\uD638\\uCD9C\\uD55C \\uCABD\\uC5D0\\uC11C \\uCC98\\uB9AC\\uD558\\uB3C4\\uB85D \\uB358\\uC838\\uC8FC\\uB294 \\uAC83\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"throws\"), \" \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA70 \\uB4A4\\uC5D0 \\uC608\\uC678 \\uB0B4\\uC6A9\\uC744 \\uC791\\uC131\\uD55C\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD558\\uB098\\uB9CC \\uC791\\uC131\\uD560 \\uC218 \\uC788\\uB294 \\uAC83\\uC740 \\uC544\\uB2C8\\uACE0 ,\\uB85C \\uAD6C\\uBD84\\uD558\\uC5EC \\uC5EC\\uB7EC \\uC608\\uC678\\uB97C throw \\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"catch\\uC640 \\uB9C8\\uCC2C\\uAC00\\uC9C0\\uB85C \\uBAA8\\uB4E0 \\uC608\\uC678 \\uD074\\uB798\\uC2A4\\uAC00 \\uC0C1\\uC18D\\uBC1B\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exception\"), \" \\uD074\\uB798\\uC2A4\\uB97C \\uC791\\uC131\\uD558\\uBA74 \\uBAA8\\uB4E0 \\uC608\\uC678\\uCC98\\uB9AC\\uAC00 \\uAC00\\uB2A5\\uD558\\uB2E4.\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package first;\\n\\npublic class ExceptionExam2 {\\n    \\n    //\\uC2E4\\uC81C \\uC608\\uC678\\uAC00 \\uBC1C\\uC0DD\\uD558\\uB294 \\uACF3(0\\uC73C\\uB85C \\uB098\\uB204\\uAC8C \\uB418\\uB294 \\uACF3)\\uC740 main\\uC774 \\uC544\\uB2CC \\uC774 \\uBA54\\uC18C\\uB4DC\\uC5D0\\uC11C \\uBC1C\\uC0DD\\uD558\\uAC8C \\uB41C\\uB2E4.\\n    //\\uADF8\\uB7EC\\uB098 \\uC5EC\\uAE30\\uC11C \\uC608\\uC678\\uB97C \\uBC14\\uB85C \\uCC98\\uB9AC\\uD558\\uC9C0 \\uC54A\\uACE0 throws\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC608\\uC678\\uB97C \\uD638\\uCD9C\\uD55C main\\uC5D0\\uC11C \\uC608\\uC678\\uCC98\\uB9AC\\uB97C \\uD558\\uB3C4\\uB85D \\uD560 \\uC218 \\uC788\\uB2E4.\\n    //\\uC544\\uB798\\uC758 \\uACBD\\uC6B0 ArithmeticException\\uD558\\uB098\\uB9CC \\uC801\\uC5C8\\uC9C0\\uB9CC ,\\uB85C \\uAD6C\\uBD84\\uD558\\uC5EC \\uB2E4\\uC591\\uD55C \\uC608\\uC678\\uB97C throw \\uD560 \\uC218 \\uC788\\uB2E4.\\n    //throws \\uC608\\uC6781, \\uC608\\uC6782\\n    public static int divide(int a, int b) throws ArithmeticException{\\n        int c = a/b;\\n        return c;\\n    }\\n    \\n    public static void main(String[] args) {\\n        int i = 10;\\n        int j = 0;\\n        try {\\n        int k = divide(i,j);\\n        System.out.println(k);\\n        }catch(ArithmeticException e) {\\n            System.out.println(e);\\n        }\\n    }\\n}\\n\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Throw\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC15\\uC81C\\uB85C \\uC624\\uB958\\uB97C \\uBC1C\\uC0DD\\uC2DC\\uD0A4\\uB294 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC8FC\\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"throws\"), \"\\uC640 \\uD568\\uAED8 \\uC0AC\\uC6A9\\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package first;\\n\\npublic class ExceptionExam3 {\\n    \\n    //\\uBA54\\uC18C\\uB4DC\\n    public static int divide(int a, int b){\\n        if(b == 0){\\n            System.out.println(\\\"2\\uBC88\\uC9F8 \\uB9E4\\uAC1C\\uBCC0\\uC218\\uB294 0\\uC774\\uBA74 \\uC548\\uB429\\uB2C8\\uB2E4.\\\");\\n            //\\uC774 \\uBA54\\uC18C\\uB4DC\\uB294 \\uBC18\\uB4DC\\uC2DC int\\uB97C \\uB9AC\\uD134\\uD574\\uC57C \\uD55C\\uB2E4.\\n            //\\uB530\\uB77C\\uC11C \\uBCF8\\uB798 0\\uC73C\\uB85C \\uB098\\uB204\\uB294 \\uAC83\\uC740 \\uBD88\\uAC00\\uB2A5\\uD568\\uC5D0\\uB3C4 return \\uAC12\\uC744 \\uC801\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD558\\uAE30\\uC5D0 0\\uC774\\uB77C\\uACE0 \\uC801\\uC5B4\\uB193\\uC558\\uB2E4.\\n            //\\uADF8\\uB7EC\\uB098 \\uB2E4\\uB978 \\uC0AC\\uB78C\\uC774 \\uBCF4\\uAE30\\uC5D0 \\uACC4\\uC0B0 \\uACB0\\uACFC\\uAC00 0\\uC774\\uB77C\\uACE0 \\uCC29\\uAC01\\uD560 \\uC218\\uB3C4 \\uC788\\uC73C\\uBBC0\\uB85C \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC2E4\\uD589\\uD574\\uC120 \\uC548\\uB41C\\uB2E4.\\n            return 0;\\n        }\\n        int c = a / b;\\n        return c;\\n    }\\n    \\n    public static void main(String[] args) {\\n        int i = 10;\\n        int j = 0;\\n        int k = divide(i,j);\\n        System.out.println(k); //0\\n    }\\n}\\n\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704\\uC640 \\uAC19\\uC740 \\uACBD\\uC6B0\\uC5D0 \\uC0AC\\uC6A9\\uD558\\uB294 \\uAC83\\uC774 throw\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package first;\\n\\npublic class ExceptionExam3 {\\n    \\n    //\\uBA54\\uC18C\\uB4DC\\n    public static int divide(int a, int b) throws IllegalArgumentException{\\n        if(b == 0){\\n            //IllegalArgumentException\\uC774\\uB77C\\uB294 \\uC608\\uC678 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131, \\uC790\\uBC14 \\uB0B4\\uBD80\\uC5D0\\uB294 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uB2E4\\uC591\\uD55C \\uC608\\uC678 \\uAC1D\\uCCB4\\uAC00 \\uC874\\uC7AC.\\n            throw new IllegalArgumentException(\\\"0\\uC73C\\uB85C \\uB098\\uB20C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\\\");\\n        }\\n        int c = a / b;\\n        return c;\\n    }\\n    \\n    public static void main(String[] args) {\\n        int i = 10;\\n        int j = 0;\\n        try {\\n        int k = divide(i,j);\\n        System.out.println(k);\\n        }catch(IllegalArgumentException e) {\\n            System.out.println(e.toString()); //java.lang.IllegalArgumentException: 0\\uC73C\\uB85C \\uB098\\uB20C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\\n        }\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC0AC\\uC6A9\\uC790 \\uC815\\uC758 Exception\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAD73\\uC774 \\uC0AC\\uC6A9\\uC790 \\uC815\\uC758 Exception\\uC744 \\uB9CC\\uB4DC\\uB294 \\uC774\\uC720\\uB294 \\uD074\\uB798\\uC2A4\\uC758 \\uC774\\uB984\\uB9CC\\uC73C\\uB85C \\uC5B4\\uB5A4 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uB294\\uC9C0 \\uC54C\\uB824\\uC8FC\\uAE30 \\uC704\\uD568\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exception\"), \" \\uD074\\uB798\\uC2A4\\uB098 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeException \"), \" \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D \\uBC1B\\uC544 \\uB9CC\\uB4E0 \\uC608\\uC678 \\uD074\\uB798\\uC2A4\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Checked Exception\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exception\"), \" \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D \\uBC1B\\uC544 \\uC815\\uC758\\uD55C \\uC608\\uC678 \\uD074\\uB798\\uC2A4, \\uBC18\\uB4DC\\uC2DC \\uC624\\uB958\\uB97C \\uCC98\\uB9AC \\uD574\\uC57C\\uB9CC \\uD558\\uB294 exception, \\uC608\\uC678 \\uCC98\\uB9AC\\uD558\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uCEF4\\uD30C\\uC77C \\uC624\\uB958\\uB97C \\uBC1C\\uC0DD \\uC2DC\\uD0A8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Unchecked Exception\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeException \"), \" \\uD074\\uB798\\uC2A4\\uB97C \\uC0C1\\uC18D \\uBC1B\\uC544 \\uC815\\uC758\\uD55C \\uC608\\uC678 \\uD074\\uB798\\uC2A4 \\uC608\\uC678 \\uCC98\\uB9AC\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uCEF4\\uD30C\\uC77C \\uC2DC\\uC5D0\\uB294 \\uC624\\uB958\\uB97C \\uBC1C\\uC0DD\\uC2DC\\uD0A4\\uC9C0 \\uC54A\\uB294\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC29\\uBC95\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eclipse\"), \" \\uAE30\\uC900\\uC73C\\uB85C \\uC0C8\\uB85C\\uC6B4 \\uD074\\uB798\\uC2A4 \\uC0DD\\uC131\\uC2DC \\uC5B4\\uB5A4 \\uC608\\uC678 \\uD074\\uB798\\uC2A4(checed, unchecked)\\uB97C \\uB9CC\\uB4E4\\uC9C0\\uC5D0 \\uB530\\uB77C\\uC11C  \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"superclass\"), \"\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exception\"), \" \\uC774\\uB098 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeException \"), \" \\uB97C \\uC120\\uD0DD \\uD6C4 \\uC0DD\\uC131\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"//CustomException.java\\npackage first;\\n\\n//RuntimeException\\uC744 \\uC0C1\\uC18D\\npublic class CustomException extends RuntimeException {\\n    //\\uC0DD\\uC131\\uC7901\\n    public CustomException(String msg){\\n        super(msg);\\n    }\\n    //\\uC0DD\\uC131\\uC7902\\n    public CustomException(Exception e){\\n        super(e);\\n    }\\n}\\n\\n\\n\\n//ExampleForCustomExeption.java\\npackage first;\\n\\npublic class ExampleForCustomExeption {\\n    \\n    public void exMethod(int i) throws CustomException{\\n        System.out.println(\\\"\\uBA54\\uC18C\\uB4DC \\uC2DC\\uC791\\\");\\n        \\n        if(i<0){ \\n            throw new CustomException(\\\"\\uB118\\uC5B4\\uAC08 \\uBA54\\uC138\\uC9C0 \\uC785\\uB2C8\\uB2E4.\\\");\\n        }\\n        \\n        System.out.println(\\\"\\uBA54\\uC18C\\uB4DC \\uC885\\uB8CC\\\");\\n    }\\n    \\n    public static void main(String[] args) {\\n        ExampleForCustomExeption ex = new ExampleForCustomExeption();\\n        ex.exMethod(1);\\n        ex.exMethod(-1);\\n    }\\n}\\n\\nout\\n//ex.exMethod(1);\\uC774 \\uC2E4\\uD589\\uB41C \\uACB0\\uACFC\\n\\uBA54\\uC18C\\uB4DC \\uC2DC\\uC791\\n\\uBA54\\uC18C\\uB4DC \\uC885\\uB8CC\\n\\uBA54\\uC18C\\uB4DC \\uC2DC\\uC791\\n\\n//ex.exMethod(-1);\\uC774 \\uC2E4\\uD589\\uB41C \\uACB0\\uACFC, \\uC544\\uB798\\uC5D0\\uC11C \\uC9C1\\uC811 \\uC815\\uC758\\uD55C CustomException\\uC744 \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uB2E4.\\nException in thread \\\"main\\\" first.CustomException: \\uB118\\uC5B4\\uAC08 \\uBA54\\uC138\\uC9C0 \\uC785\\uB2C8\\uB2E4.\\n    at first/first.ExampleForCustomExeption.exMethod(ExampleForCustomExeption.java:9)\\n    at first/first.ExampleForCustomExeption.main(ExampleForCustomExeption.java:18)\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wikidocs.net/book/31\"\n  }), \"https://wikidocs.net/book/31\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"예외 상황 try  -  catch  -  finally try: 에러가 발생할 수 있는 부분을 작성 catch…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/java-10-예외처리","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}