{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/spring-06-spring-컨테이너와-빈","result":{"data":{"post":{"__typename":"MdxPost","slug":"/spring-06-spring-컨테이너와-빈","title":"Spring-06.Spring 컨테이너와 빈","date":"12.01.2021","tags":[{"name":"Spring","slug":"spring"}],"description":"Spring-Spring-06.Spring 컨테이너와 빈","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spring-06.Spring 컨테이너와 빈\",\n  \"date\": \"2021-01-12T00:00:00.000Z\",\n  \"description\": \"Spring-Spring-06.Spring 컨테이너와 빈\",\n  \"tags\": [\"Spring\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108 \\uC0DD\\uC131\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uC758 \\uC0DD\\uC131\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AppclicationContext\"), \"\\uB97C \\uD1B5\\uD574 \\uC0DD\\uC131\\uD55C\\uB2E4. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AppclicationContext\"), \"\\uB294 \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uB85C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AnnotationConfigApplicationContext\"), \"\\uB294 \\uADF8 \\uAD6C\\uD604\\uCCB4\\uC911 \\uD558\\uB098\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 XML \\uAE30\\uBC18\\uC73C\\uB85C \\uB9CC\\uB4E4 \\uC218 \\uC788\\uACE0, \\uC5B4\\uB178\\uD14C\\uC774\\uC158 \\uAE30\\uBC18\\uC758 \\uC790\\uBC14 \\uC124\\uC815 \\uD074\\uB798\\uC2A4\\uB85C \\uB9CC\\uB4E4 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AppConfigSpring\"), \"\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD588\\uB358 \\uBC29\\uC2DD\\uC774 \\uC5B4\\uB178\\uD14C\\uC774\\uC158 \\uAE30\\uBC18\\uC758 \\uC790\\uBC14 \\uC124\\uC815 \\uD074\\uB798\\uC2A4\\uB85C \\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB97C \\uB9CC\\uB4E0 \\uAC83\\uC774\\uB2E4.\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC0DD\\uC131 \\uACFC\\uC815\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAD6C\\uC131 \\uC815\\uBCF4\\uB97C \\uC778\\uC790\\uB85C \\uBC1B\\uC544 \\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108 \\uC0DD\\uC131, \\uCEE8\\uD14C\\uC774\\uB108 \\uB0B4\\uBD80\\uC5D0\\uC11C\\uB294 \\uC2A4\\uD504\\uB9C1 \\uBE48 \\uC800\\uC7A5\\uC18C\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\uBE48 \\uC774\\uB984:\\uBE48 \\uAC1D\\uCCB4\"), \" \\uD615\\uC2DD\\uC73C\\uB85C \\uBE48\\uC744 \\uC800\\uC7A5\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC778\\uC790\\uB85C \\uBC1B\\uC740 \\uAD6C\\uC131 \\uC815\\uBCF4 \\uC911\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@Bean\"), \"\\uC774 \\uBD99\\uC740 \\uBA54\\uC11C\\uB4DC\\uB4E4\\uC758 \\uB9AC\\uD134\\uAC12\\uC73C\\uB85C \\uBC1B\\uC740 \\uAC1D\\uCCB4\\uB97C \\uC2A4\\uD504\\uB9C1 \\uBE48 \\uC800\\uC7A5\\uC18C\\uC5D0 \\uB4F1\\uB85D(\\uBE48 \\uC774\\uB984\\uC740 \\uBA54\\uC18C\\uB4DC\\uBA85\\uC73C\\uB85C \\uB4F1\\uB85D)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC8FC\\uC758\\uD560 \\uC810\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@Bean\"), \" \\uC5B4\\uB178\\uD14C\\uC774\\uC158\\uC758 \\uC18D\\uC131 \\uC911 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name=\"), \"\\uC744 \\uC0AC\\uC6A9\\uD560 \\uACBD\\uC6B0 \\uBE48 \\uC774\\uB984\\uC740 \\uC911\\uBCF5\\uB418\\uC120 \\uC548\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC911\\uBCF5\\uB420 \\uACBD\\uC6B0 \\uB2E4\\uB978 \\uBE48\\uC774 \\uBB34\\uC2DC\\uB418\\uAC70\\uB098, \\uAE30\\uC874 \\uBE48\\uC744 \\uB36E\\uC5B4\\uBC84\\uB9AC\\uAC70\\uB098, \\uC124\\uC815\\uC5D0 \\uB530\\uB77C \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD55C\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC758\\uC874\\uAD00\\uACC4 \\uC124\\uC815\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC778\\uC790\\uB85C \\uBC1B\\uC740 \\uAD6C\\uC131 \\uC815\\uBCF4\\uB97C \\uCC38\\uACE0\\uD574\\uC11C \\uC758\\uC874\\uAD00\\uACC4\\uB97C \\uC8FC\\uC785\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AppConfigSpirng.java\"), \" \\uCF54\\uB4DC\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"memberService\"), \"\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"memberRepository\"), \"\\uC5D0 \\uC758\\uC874\\uD558\\uACE0, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"orderService\"), \"\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"memberRepository\"), \"\\uC640 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"discountPolicy\"), \"\\uC5D0 \\uC758\\uC874\\uD558\\uB294\\uB370 \\uC774\\uB7EC\\uD55C \\uC758\\uC874\\uAD00\\uACC4\\uB97C \\uC124\\uC815\\uD55C\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC1C\\uB150\\uC801\\uC73C\\uB85C\\uB294 \\uC2A4\\uD504\\uB9C1 \\uBE48\\uC744 \\uC0DD\\uC131\\uD558\\uB294 \\uB2E8\\uACC4\\uC640 \\uC758\\uC874\\uAD00\\uACC4\\uB97C \\uC124\\uC815\\uD558\\uB294 \\uB2E8\\uACC4\\uB85C \\uB098\\uB258\\uC5B4\\uC838 \\uC788\\uB2E4. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uADF8\\uB7F0\\uB370 \\uC774\\uB807\\uAC8C \\uC790\\uBC14 \\uCF54\\uB4DC\\uB85C \\uC2A4\\uD504\\uB9C1 \\uBE48\\uC744 \\uB4F1\\uB85D\\uD558\\uBA74 \\uC0DD\\uC131\\uC790\\uB97C \\uD638\\uCD9C\\uD558\\uBA74\\uC11C \\uC758\\uC874\\uAD00\\uACC4 \\uC8FC\\uC785\\uB3C4 \\uD55C\\uBC88\\uC5D0 \\uCC98\\uB9AC\\uB41C\\uB2E4.\"))))), mdx(\"h2\", null, \"\\uC2A4\\uD504\\uB9C1 \\uBE48 \\uC870\\uD68C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uCEE8\\uD14C\\uC774\\uB108\\uC5D0 \\uB4F1\\uB85D\\uB41C \\uBAA8\\uB4E0 \\uBE48 \\uC870\\uD68C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/test/java/start/first/beanfind\"), \"\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ApplicationContextInfoTest.java\"), \" \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.beanfind;\\n\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.beans.factory.config.BeanDefinition;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport start.first.AppConfigSpring;\\n\\npublic class ApplicationContextInfoTest {\\n\\n    AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(AppConfigSpring.class);\\n\\n    @Test\\n    @DisplayName(\\\"\\uBAA8\\uB4E0 \\uBE48 \\uCD9C\\uB825\\uD558\\uAE30\\\")\\n    void findAllBean(){\\n        String[] beanDefinitionNames = ac.getBeanDefinitionNames();\\n\\n        for (String beanDefinitionName : beanDefinitionNames) {\\n            Object bean = ac.getBean(beanDefinitionName);\\n            //name\\uC740 key, object\\uB294 value\\uC5D0 \\uD574\\uB2F9\\n            System.out.println(\\\"name = \\\" + beanDefinitionName + \\\" object = \\\" + bean);\\n        }\\n    }\\n    \\n    //spirng \\uB0B4\\uBD80\\uC5D0\\uC11C \\uB4F1\\uB85D\\uD558\\uB294 Bean\\uC740 \\uC81C\\uC678\\uD558\\uACE0 \\uB0B4\\uAC00 \\uB4F1\\uB85D\\uD588\\uAC70\\uB098 \\uC678\\uBD80 \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC\\uC5D0\\uC11C \\uB4F1\\uB85D\\uD55C Bean\\uB9CC \\uAC80\\uC0C9\\n    @Test\\n    @DisplayName(\\\"\\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158 \\uBE48 \\uCD9C\\uB825\\uD558\\uAE30\\\")\\n    void findApplicationBean() {\\n        String[] beanDefinitionNames = ac.getBeanDefinitionNames();\\n        for (String beanDefinitionName : beanDefinitionNames) {\\n            BeanDefinition beanDefinition =\\n                    ac.getBeanDefinition(beanDefinitionName);\\n            //Role ROLE_APPLICATION: \\uC9C1\\uC811 \\uB4F1\\uB85D\\uD55C \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158 \\uBE48\\n            //Role ROLE_INFRASTRUCTURE: \\uC2A4\\uD504\\uB9C1\\uC774 \\uB0B4\\uBD80\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD558\\uB294 \\uBE48\\n            //beanDefinition\\uC758 \\uC5ED\\uD560\\uC774 APPLICATION\\uC77C \\uB54C\\uB9CC \\uCD9C\\uB825\\n            if (beanDefinition.getRole() == BeanDefinition.ROLE_APPLICATION) {\\n                Object bean = ac.getBean(beanDefinitionName);\\n                System.out.println(\\\"name=\\\" + beanDefinitionName + \\\" object=\\\" +\\n                        bean);\\n            }\\n        }\\n    }\\n\\n}\\n\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBE48 \\uD0C0\\uC785 \\uD639\\uC740 \\uC774\\uB984\\uC73C\\uB85C \\uC870\\uD68C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".getBean(\\uBE48 \\uC774\\uB984, \\uBE48 \\uD0C0\\uC785)\"), \"\\uC744 \\uC0AC\\uC6A9\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.beanfind;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.beans.factory.NoSuchBeanDefinitionException;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport start.first.AppConfigSpring;\\nimport start.first.member.MemberService;\\nimport start.first.member.MemberServiceImpl;\\n\\npublic class ApplicationContextBasicFindtest {\\n\\n    AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(AppConfigSpring.class);\\n\\n    @Test\\n    @DisplayName(\\\"\\uBE48 \\uC774\\uB984\\uC73C\\uB85C \\uC870\\uD68C\\uD558\\uAE30\\\")\\n    void findBeanByName(){\\n        //getBean\\uC740 \\uBE48 \\uD0C0\\uC785\\uB9CC \\uB118\\uACA8\\uB3C4 \\uB418\\uACE0 \\uBE48 \\uC774\\uB984\\uACFC \\uD0C0\\uC785\\uC744 \\uD568\\uAED8 \\uB118\\uACA8\\uB3C4 \\uB41C\\uB2E4.\\n        MemberService memberService = ac.getBean(\\\"memberService\\\",MemberService.class);\\n        //memberService\\uAC00 MemberService\\uC758 \\uC778\\uC2A4\\uD134\\uC2A4\\uBA74 \\uC131\\uACF5\\n        Assertions.assertThat(memberService).isInstanceOf(MemberService.class);\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uC774\\uB984 \\uC5C6\\uC774 \\uD0C0\\uC785\\uC73C\\uB85C\\uB9CC \\uC870\\uD68C\\\")\\n    void findBeanByType(){\\n        MemberService memberService = ac.getBean(MemberService.class);\\n        Assertions.assertThat(memberService).isInstanceOf(MemberServiceImpl.class);\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uAD6C\\uCCB4 \\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\\")\\n    void findBeanByName2(){\\n        //findBeanByName\\uACFC \\uB2EC\\uB9AC \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uC778 MemberService\\uAC00 \\uC544\\uB2CC \\uAD6C\\uCCB4\\uC778 MemberServiceImpl\\uC758 \\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uD55C\\uB2E4.\\n        //\\uC778\\uD130\\uD398\\uC774\\uC2A4\\uAC00 \\uC544\\uB2CC \\uAD6C\\uCCB4\\uC5D0 \\uC758\\uC874\\uD558\\uAE30\\uC5D0 \\uC88B\\uC740 \\uCF54\\uB4DC\\uB294 \\uC544\\uB2C8\\uB2E4. \\uADF8\\uB7EC\\uB098 \\uD544\\uC694\\uD55C \\uB54C\\uB3C4 \\uC788\\uC73C\\uBBC0\\uB85C \\uAD6C\\uCCB4 \\uD0C0\\uC785\\uC73C\\uB85C\\uB3C4 \\uC870\\uD68C\\uAC00 \\uAC00\\uB2A5\\uD558\\uB2E4\\uB294 \\uAC83\\uB9CC \\uC54C\\uBA74 \\uB41C\\uB2E4.\\n        MemberService memberService = ac.getBean(\\\"memberService\\\",MemberServiceImpl.class);\\n        Assertions.assertThat(memberService).isInstanceOf(MemberServiceImpl.class);\\n    }\\n\\n    //\\uC2E4\\uD328 \\uD14C\\uC2A4\\uD2B8, \\uD14C\\uC2A4\\uD2B8\\uB294 \\uD56D\\uC0C1 \\uC2E4\\uD328 \\uD14C\\uC2A4\\uD2B8\\uB97C \\uD568\\uAED8 \\uB9CC\\uB4DC\\uB294 \\uAC83\\uC774 \\uC88B\\uB2E4.\\n    @Test\\n    @DisplayName(\\\"\\uBE48 \\uC774\\uB984\\uC73C\\uB85C \\uC870\\uD68C \\uC2E4\\uD328\\\")\\n    void findBeanByNameX(){\\n        //xxxxx\\uB77C\\uB294 \\uC774\\uB984\\uC758 \\uBE48\\uC774 \\uC5C6\\uC73C\\uBBC0\\uB85C NoSuchBeanDefinitionException\\uC608\\uC678\\uAC00 \\uBC1C\\uC0DD\\n        //ac.getBean(\\\"xxxxx\\\",MemberService.class)\\uAC00 \\uC2E4\\uD589\\uB420 \\uB54C NoSuchBeanDefinitionException\\uC608\\uC678\\uAC00 \\uBC1C\\uC0DD\\uD558\\uBA74 \\uC131\\uACF5\\n        org.junit.jupiter.api.Assertions.assertThrows(NoSuchBeanDefinitionException.class, () -> ac.getBean(\\\"xxxxx\\\",MemberService.class));\\n    }\\n}\\n\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB3D9\\uC77C\\uD55C \\uD0C0\\uC785\\uC774 \\uB458 \\uC774\\uC0C1\\uC77C \\uB54C \\uC870\\uD68C\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.beanfind;\\n\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.beans.factory.NoUniqueBeanDefinitionException;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport start.first.member.MemberRepository;\\nimport start.first.member.MemoryMemberRepository;\\n\\nimport java.util.Map;\\n\\nimport static org.junit.jupiter.api.Assertions.assertThrows;\\n\\npublic class ApplicationContextSameBeanFindTest {\\n\\n\\n    //\\uAE30\\uC874\\uC758 AppConfigSpring\\uC5D0\\uB294 \\uB3D9\\uC54C\\uD55C \\uD0C0\\uC785\\uC774 \\uC5C6\\uC73C\\uBBC0\\uB85C SameBeanConfig\\uB97C \\uC0C8\\uB85C \\uB9CC\\uB4E0\\uB2E4.\\n    AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(SameBeanConfig.class);\\n\\n    //\\uB3D9\\uC77C\\uD55C \\uD0C0\\uC785\\uC744 \\uB9CC\\uB4E4\\uAE30 \\uC704\\uD55C Config \\uC0DD\\uC131\\n    @Configuration\\n    static class SameBeanConfig {\\n\\n        @Bean\\n        public MemberRepository memberRepository1() {\\n            return new MemoryMemberRepository();\\n        }\\n\\n        @Bean\\n        public MemberRepository memberRepository2() {\\n            return new MemoryMemberRepository();\\n        }\\n\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uC2DC \\uAC19\\uC740 \\uD0C0\\uC785\\uC774 \\uB458 \\uC774\\uC0C1 \\uC788\\uC73C\\uBA74, \\uC911\\uBCF5 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD55C\\uB2E4.\\\")\\n    void findBeanByTypeDuplicate(){\\n        //\\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC2E4\\uD589\\uD560 \\uACBD\\uC6B0 MemoryMemberRepository \\uD0C0\\uC785\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uBE48\\uC774 2\\uAC1C \\uC788\\uC73C\\uBBC0\\uB85C NoUniqueBeanDefinitionException error\\uAC00 \\uBC1C\\uC0DD\\n        //MemberRepository memberRepository = ac.getBean(MemberRepository.class);\\n\\n        //\\uB530\\uB77C\\uC11C assertThrows\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\\n        assertThrows(NoUniqueBeanDefinitionException.class,()->ac.getBean(MemberRepository.class));\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uC2DC \\uAC19\\uC740 \\uD0C0\\uC785\\uC774 \\uB458 \\uC774\\uC0C1 \\uC788\\uC73C\\uBA74, \\uBE48 \\uC774\\uB984\\uC744 \\uC9C0\\uC815\\uD558\\uBA74 \\uB41C\\uB2E4.\\\")\\n    void findBeanByName(){\\n        MemberRepository memberRepository = ac.getBean(\\\"memberRepository1\\\",MemberRepository.class);\\n        org.assertj.core.api.Assertions.assertThat(memberRepository).isInstanceOf(MemberRepository.class);\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uAC19\\uC740 \\uD0C0\\uC785\\uC774 \\uB458 \\uC774\\uC0C1 \\uC788\\uC744 \\uB54C \\uD2B9\\uC815 \\uD0C0\\uC785\\uC744 \\uBAA8\\uB450 \\uC870\\uD68C\\uD558\\uAE30\\uAE30\\\")\\n    void findAllBeanByType(){\\n        //getBeansOfType\\uC744 \\uC0AC\\uC6A9\\n        Map<String, MemberRepository> beansOfType = ac.getBeansOfType(MemberRepository.class);\\n        for(String key : beansOfType.keySet()){\\n            System.out.println(\\\"key = \\\" + key +\\\" value = \\\" + beansOfType.get(key));\\n        }\\n        System.out.println(\\\"beansOfType = \\\" + beansOfType);\\n        //SameBeanConfig\\uC5D0\\uC11C \\uC0DD\\uC131\\uD55C \\uBE48\\uC774 2\\uAC1C\\uC774\\uBBC0\\uB85C beansOfType\\uC5D0 2\\uAC1C\\uAC00 \\uB4E4\\uC5B4 \\uC788\\uB2E4\\uBA74 \\uC131\\uACF5\\uD55C \\uAC83\\uC774\\uB2E4.\\n        org.assertj.core.api.Assertions.assertThat(beansOfType.size()).isEqualTo(2);\\n    }\\n\\n\\n}\\n\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC0C1\\uC18D\\uAD00\\uACC4 \\uC77C \\uB54C \\uBE48 \\uC870\\uD68C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBD80\\uBAA8 \\uD0C0\\uC785\\uC744 \\uC870\\uD68C\\uD558\\uBA74 \\uC790\\uC2DD \\uBE48\\uB4E4\\uC740 \\uD568\\uAED8 \\uC870\\uD68C \\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBAA8\\uB4E0 \\uC790\\uBC14 \\uAC1D\\uCCB4\\uC758 \\uBD80\\uBAA8\\uC778 Object \\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uD558\\uBA74 \\uBAA8\\uB4E0 \\uC2A4\\uD504\\uB9C1 \\uBE48\\uC744 \\uC870\\uD68C\\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.beanfind;\\n\\nimport org.junit.jupiter.api.Assertions;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.beans.factory.NoUniqueBeanDefinitionException;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport org.springframework.context.annotation.Bean;\\nimport org.springframework.context.annotation.Configuration;\\nimport start.first.discount.DiscountPolicy;\\nimport start.first.discount.FixDiscountPolicy;\\nimport start.first.discount.RateDiscountPolicy;\\n\\nimport java.util.Map;\\n\\nimport static org.assertj.core.api.Assertions.assertThat;\\n\\npublic class ApplicationContextExtendsFindTest {\\n\\n    AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(TestConfig.class);\\n\\n    //DiscountPolicy\\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uD588\\uC744 \\uB54C \\uC790\\uC2DD \\uD0C0\\uC785\\uC778 RateDiscountPolicy\\uC640 FixDiscountPolicy\\uAC00 \\uC870\\uD68C\\uB418\\uAC8C \\uD558\\uAE30 \\uC704\\uD55C Config\\uB97C \\uC791\\uC131\\n    @Configuration\\n    static class TestConfig {\\n        @Bean\\n        public DiscountPolicy rateDiscountPolicy() {\\n            return new RateDiscountPolicy();\\n        }\\n\\n        @Bean\\n        public DiscountPolicy fixDiscountPolicy() {\\n            return new FixDiscountPolicy();\\n        }\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uBD80\\uBAA8 \\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uC2DC \\uC790\\uC2DD\\uC774 \\uB458 \\uC774\\uC0C1 \\uC788\\uC73C\\uBA74 \\uC911\\uBCF5 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\\")\\n    void findBeanByParentTypeDuplicate() {\\n        //\\uC544\\uB798 \\uCF54\\uB4DC\\uB97C \\uC2E4\\uD589\\uD558\\uBA74 NoUniqueBeanDefinitionException \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD55C\\uB2E4.\\n        //DiscountPolicy bean = ac.getBean(DiscountPolicy.class);\\n\\n        Assertions.assertThrows(NoUniqueBeanDefinitionException.class, () -> ac.getBean(DiscountPolicy.class));\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uBD80\\uBAA8 \\uD0C0\\uC785\\uC73C\\uB85C \\uC790\\uC2DD\\uC774 \\uB458 \\uC774\\uC0C1 \\uC788\\uC73C\\uBA74 \\uBE48 \\uC774\\uB984\\uC744 \\uC9C0\\uC815\\uD558\\uBA74 \\uB41C\\uB2E4.\\\")\\n    void findBeanByParentTypeBeanName(){\\n        DiscountPolicy rateDiscountPolicy = ac.getBean(\\\"rateDiscountPolicy\\\",DiscountPolicy.class);\\n        assertThat(rateDiscountPolicy).isInstanceOf(RateDiscountPolicy.class);\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uBD80\\uBAA8 \\uD0C0\\uC785\\uC73C\\uB85C \\uC790\\uC2DD\\uC774 \\uB458 \\uC774\\uC0C1 \\uC788\\uC73C\\uBA74 \\uD2B9\\uC815 \\uC790\\uC2DD \\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uD574\\uB3C4 \\uB41C\\uB2E4.\\\")\\n    //\\uD604\\uC7AC Config\\uC5D0\\uB294 \\uBD80\\uBAA8 \\uD0C0\\uC785\\uC758 \\uC790\\uC2DD \\uD0C0\\uC785 \\uC911 \\uC911\\uBCF5\\uB41C \\uAC83\\uC774 \\uC5C6\\uC5B4 \\uC0C1\\uAD00\\uC774 \\uC5C6\\uC73C\\uB098 \\uC790\\uC2DD \\uD0C0\\uC785 \\uC911 \\uC911\\uBCF5\\uB41C \\uAC83\\uC774 \\uC788\\uC744 \\uACBD\\uC6B0 \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD560 \\uC218 \\uC788\\uB2E4.\\n    //\\uB530\\uB77C\\uC11C \\uC88B\\uC740 \\uBC29\\uBC95\\uC740 \\uC544\\uB2C8\\uB2E4.\\n    void findBeanBySubType(){\\n        RateDiscountPolicy bean = ac.getBean(RateDiscountPolicy.class);\\n        assertThat(bean).isInstanceOf(RateDiscountPolicy.class);\\n    }\\n\\n    @Test\\n    @DisplayName(\\\"\\uBD80\\uBAA8 \\uD0C0\\uC785\\uC73C\\uB85C \\uBAA8\\uB450 \\uC870\\uD68C\\uD558\\uAE30\\\")\\n    void findAllBeanByParentType(){\\n        Map<String, DiscountPolicy> beansOfType = ac.getBeansOfType(DiscountPolicy.class);\\n        assertThat(beansOfType.size()).isEqualTo(2);\\n        for(String key : beansOfType.keySet()){\\n            System.out.println(\\\"key = \\\" + key +\\\" value = \\\" + beansOfType.get(key));\\n        }\\n    }\\n    \\n    @Test\\n    @DisplayName(\\\"Object \\uD0C0\\uC785\\uC73C\\uB85C \\uC870\\uD68C\\uD574\\uBCF4\\uAE30\\\")\\n    //Object\\uB294 \\uC790\\uBC14\\uC758 \\uBAA8\\uB4E0 \\uAC1D\\uCCB4\\uC758 \\uBD80\\uBAA8\\uC774\\uBBC0\\uB85C \\uBAA8\\uB4E0 \\uBE48\\uC774 \\uB2E4 \\uC870\\uD68C\\uB41C\\uB2E4.\\n    void findAllBeanByObjectType(){\\n        Map<String, Object> beansOfType = ac.getBeansOfType(Object.class);\\n        for(String key : beansOfType.keySet()){\\n            System.out.println(\\\"key = \\\" + key +\\\" value = \\\" + beansOfType.get(key));\\n        }\\n    }\\n\\n}\\n\")))), mdx(\"h2\", null, \"BeanFactory\\uC640 ApplicationContext\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanFactory\\uB098 ApplicationContext\\uB97C \\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB77C \\uD55C\\uB2E4.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanFactory\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uC758 \\uCD5C\\uC0C1\\uC704 \\uC778\\uD130\\uD398\\uC774\\uC2A4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uBE48\\uC744 \\uAD00\\uB9AC\\uD558\\uACE0 \\uC870\\uD68C\\uD558\\uB294 \\uC5ED\\uD560\\uC744 \\uB2F4\\uB2F9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".getBean()\"), \"\\uC744 \\uC81C\\uACF5\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC704\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD588\\uB358 \\uB300\\uBD80\\uBD84\\uC758 \\uAE30\\uB2A5\\uC740 BeanFactory\\uAC00 \\uC81C\\uACF5\\uD558\\uB294 \\uAE30\\uB2A5\\uC774\\uB2E4.\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ApplicationContext\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanFactory\\uB97C \\uC0C1\\uC18D \\uBC1B\\uC740 \\uC778\\uD130\\uD398\\uC774\\uC2A4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanFactory\\uC758 \\uAE30\\uB2A5\\uC744 \\uBAA8\\uB450 \\uC0C1\\uC18D \\uBC1B\\uC544\\uC11C \\uC81C\\uACF5\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanFactory \\uC678\\uC5D0\\uB3C4 \\uC544\\uB798\\uC640 \\uAC19\\uC740 \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uB4E4\\uC744 \\uC0C1\\uC18D\\uBC1B\\uC544 \\uC218 \\uB9CE\\uC740 \\uBD80\\uAC00 \\uAE30\\uB2A5\\uC744 \\uC81C\\uACF5\\uD55C\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MessageSource: \\uBA54\\uC138\\uC9C0 \\uC18C\\uC2A4\\uB97C \\uD65C\\uC6A9\\uD55C \\uAD6D\\uC81C\\uD654 \\uAE30\\uB2A5, \\uD55C\\uAD6D\\uC5D0\\uC11C \\uC811\\uC18D\\uD558\\uBA74 \\uD55C\\uAD6D\\uC5B4\\uB85C, \\uC678\\uAD6D\\uC5D0\\uC11C \\uC811\\uC18D\\uD558\\uBA74 \\uC678\\uAD6D\\uC5B4\\uB85C \\uCD9C\\uB825\\uB418\\uB294 \\uAC83\\uC774 \\uC774\\uB97C \\uD1B5\\uD574 \\uAC00\\uB2A5\\uD574\\uC9C4\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"EnvironmentCapable: \\uD658\\uACBD \\uBCC0\\uC218 \\uAD00\\uB9AC, \\uB85C\\uCEEC, \\uAC1C\\uBC1C, \\uC6B4\\uC601 \\uB4F1\\uC744 \\uAD6C\\uBD84\\uD574\\uC11C \\uCC98\\uB9AC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ApplicationEventPublisher: \\uC774\\uBCA4\\uD2B8\\uB97C \\uBC1C\\uD589\\uD558\\uACE0 \\uAD6C\\uB3C5\\uD558\\uB294 \\uBAA8\\uB378\\uC744 \\uD3B8\\uB9AC\\uD558\\uAC8C \\uC9C0\\uC6D0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ResourceLoader: \\uD30C\\uC77C, \\uD074\\uB798\\uC2A4\\uD328\\uC2A4, \\uC678\\uBD80 \\uB4F1\\uC5D0\\uC11C \\uB9AC\\uC18C\\uC2A4\\uB97C \\uD3B8\\uB9AC\\uD558\\uAC8C \\uC870\\uD68C\")))))), mdx(\"h2\", null, \"\\uB2E4\\uC591\\uD55C \\uC124\\uC815 \\uD615\\uC2DD\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 \\uC790\\uBC14 \\uCF54\\uB4DC, XML, Groovy \\uB4F1 \\uB2E4\\uC591\\uD55C \\uD615\\uC2DD\\uC758 \\uC124\\uC815 \\uC815\\uBCF4\\uB97C \\uBC1B\\uC544\\uB4DC\\uB9B4 \\uC218 \\uC788\\uAC8C \\uC720\\uC5F0\\uD558\\uAC8C \\uC124\\uACC4\\uB418\\uC5B4 \\uC788\\uB2E4.\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC790\\uBC14 \\uCF54\\uB4DC\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uD588\\uB358 \\uAC83\\uC774 \\uC560\\uB178\\uD14C\\uC774\\uC158 \\uAE30\\uBC18 \\uC790\\uBC14 \\uCF54\\uB4DC \\uC124\\uC815\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AnnotationConfigApplicationContext\"), \"\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC \\uC790\\uBC14 \\uCF54\\uB4DC\\uB85C \\uB41C \\uC124\\uC815 \\uC815\\uBCF4\\uB97C \\uB118\\uAE30\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD5C\\uADFC\\uC5D0 \\uB9CE\\uC774 \\uC0AC\\uC6A9\\uD55C\\uB2E4.\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"XML\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCD5C\\uADFC\\uC5D0\\uB294 \\uC2A4\\uD504\\uB9C1 \\uBD80\\uD2B8\\uB97C \\uB9CE\\uC774 \\uC0AC\\uC6A9\\uD558\\uBA74\\uC11C XML \\uAE30\\uBC18\\uC758 \\uC124\\uC815\\uC740 \\uC798 \\uC0AC\\uC6A9\\uD558\\uC9C0 \\uC54A\\uB294\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GenericXmlApplicationContext\"), \"\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC xml \\uC124\\uC815 \\uD30C\\uC77C\\uC744 \\uB118\\uAE30\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCEF4\\uD30C\\uC77C \\uC5C6\\uC774 \\uBE48 \\uC124\\uC815 \\uC815\\uBCF4\\uB97C \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uB294 \\uC7A5\\uC810\\uC774 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src/main/resources\"), \"\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"appConfig.xml\"), \" \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-xml\"\n  }), \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<beans xmlns=\\\"http://www.springframework.org/schema/beans\\\"\\n       xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n       xsi:schemaLocation=\\\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\\\">\\n\\n    <!--\\uC544\\uB798 3\\uC904\\uC774 AppConfigSpring\\uC5D0\\uC11C memberService\\uB97C \\uB4F1\\uB85D\\uD558\\uB294 \\uBD80\\uBD84\\uC5D0 \\uD574\\uB2F9\\uD55C\\uB2E4.-->\\n    <bean id=\\\"memberService\\\" class=\\\"start.first.member.MemberServiceImpl\\\">\\n        <!--\\uC758\\uC874\\uC131\\uC744 \\uC791\\uC131-->\\n        <constructor-arg name=\\\"memberRepository\\\" ref=\\\"memberRepository\\\" />\\n    </bean>\\n\\n    <!--\\uC544\\uB798 1\\uC904\\uC774 AppConfigSpring\\uC5D0\\uC11C memberRepository\\uB97C \\uB4F1\\uB85D\\uD558\\uB294 \\uBD80\\uBD84\\uC5D0 \\uD574\\uB2F9\\uD55C\\uB2E4.-->\\n    <bean id=\\\"memberRepository\\\" class=\\\"start.first.member.MemoryMemberRepository\\\" />\\n\\n    <!--\\uC544\\uB798 3\\uC904\\uC774 AppConfigSpring\\uC5D0\\uC11C orderService\\uB97C \\uB4F1\\uB85D\\uD558\\uB294 \\uBD80\\uBD84\\uC5D0 \\uD574\\uB2F9\\uD55C\\uB2E4.-->\\n    <bean id=\\\"orderService\\\" class=\\\"start.first.order.OrderServiceImpl\\\">\\n        <!--\\uC758\\uC874\\uC131\\uC744 \\uC791\\uC131-->\\n        <constructor-arg name=\\\"memberRepository\\\" ref=\\\"memberRepository\\\" />\\n        <constructor-arg name=\\\"discountPolicy\\\" ref=\\\"discountPolicy\\\" />\\n    </bean>\\n\\n    <bean id=\\\"discountPolicy\\\" class=\\\"start.first.discount.RateDiscountPolicy\\\" />\\n</beans>\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"test\\uD560 \\uD30C\\uC77C \\uC791\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.xml;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.context.ApplicationContext;\\nimport org.springframework.context.support.GenericXmlApplicationContext;\\nimport start.first.member.MemberService;\\n\\npublic class XmlAppContext {\\n\\n    @Test\\n    void xmlAppContext(){\\n        ApplicationContext ac = new GenericXmlApplicationContext(\\\"appConfig.xml\\\");\\n        MemberService memberService = ac.getBean(\\\"memberService\\\", MemberService.class);\\n        Assertions.assertThat(memberService).isInstanceOf(MemberService.class);\\n    }\\n}\\n\")))), mdx(\"h2\", null, \"\\uC2A4\\uD504\\uB9C1 \\uBE48 \\uC124\\uC815 \\uBA54\\uD0C0 \\uC815\\uBCF4(BeanDefinition)\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uC544\\uB798 \\uB0B4\\uC6A9\\uC740 \\uC2E4\\uBB34\\uC5D0\\uC11C\\uB3C4 \\uC798 \\uC4F0\\uC9C0 \\uC54A\\uC73C\\uBBC0\\uB85C \\uC774\\uD574\\uAC00 \\uC548\\uB418\\uBA74 \\uB118\\uC5B4\\uAC00\\uB3C4 \\uBB34\\uBC29\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanDefinition\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanDefinition\\uC744 \\uBE48 \\uC124\\uC815 \\uBA54\\uD0C0\\uC815\\uBCF4\\uB77C \\uD55C\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC790\\uBC14 \\uCF54\\uB4DC\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@Bean\"), \", XML\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<bean>\"), \" \\uD558\\uB098 \\uB2F9 \\uAC01\\uAC01 \\uD558\\uB098\\uC529 \\uBA54\\uD0C0 \\uC815\\uBCF4\\uAC00 \\uC0DD\\uC131\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 \\uC774 \\uBA54\\uD0C0 \\uC815\\uBCF4\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uC2A4\\uD504\\uB9C1 \\uBE48\\uC744 \\uC0DD\\uC131\\uD55C\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1\\uC774 \\uB2E4\\uC591\\uD55C \\uC124\\uC815 \\uD615\\uC2DD\\uC744 \\uC9C0\\uC6D0\\uD560 \\uC218 \\uC788\\uB294 \\uAC83\\uC740 BeanDefinition\\uC774\\uB77C\\uB294 \\uCD94\\uC0C1\\uD654 \\uB355\\uBD84\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanDefinition\\uC774\\uB780 \\uC5ED\\uD560\\uACFC \\uAD6C\\uD604\\uC744 \\uAC1C\\uB150\\uC801\\uC73C\\uB85C \\uB098\\uB208 \\uAC83\\uC774\\uB77C\\uACE0 \\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 \\uAD6C\\uD604\\uC774 \\uC790\\uBC14 \\uCF54\\uB4DC\\uC778\\uC9C0, XML \\uD30C\\uC77C\\uC778\\uC9C0 \\uBAB0\\uB77C\\uB3C4 \\uB41C\\uB2E4. \\uC624\\uC9C1 BeanDefinition\\uC774\\uB77C\\uB294 \\uC5ED\\uD560\\uB9CC \\uC54C\\uBA74 \\uB41C\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML\\uC744 \\uC77D\\uC5B4\\uC11C BeanDefinition\\uC744 \\uB9CC\\uB4E4\\uACE0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC790\\uBC14 \\uCF54\\uB4DC\\uB97C \\uC77D\\uC5B4\\uC11C BeanDefinition\\uC744 \\uB9CC\\uB4E4\\uBA74 \\uADF8\\uB9CC\\uC774\\uB2E4.\")))))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E4\\uC591\\uD55C \\uC124\\uC815 \\uD615\\uC2DD \\uC9C0\\uC6D0 \\uC6D0\\uB9AC\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC790\\uBC14 \\uCF54\\uB4DC\\uC5D0\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AnnotationConfigApplicationContext\"), \"\\uB294 spring\\uC5D0 \\uB0B4\\uC7A5\\uB41C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AnnotatedBeanDefinitionReader\"), \"\\uB97C \\uD1B5\\uD574\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"AppConfig.class\"), \"\\uB97C \\uC77D\\uACE0 BeanDefinition\\uC744 \\uC0DD\\uC131\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"XML \\uD30C\\uC77C\\uC744 \\uC0AC\\uC6A9\\uD560 \\uB54C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GenericXmlApplicationContext\"), \"\\uB294  spring\\uC5D0 \\uB0B4\\uC7A5\\uB41C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"XmlBeanDefinitionReader\"), \"\\uB97C \\uD1B5\\uD574\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"appConfg.xml\"), \"\\uC744 \\uC77D\\uACE0 BeanDefinition\\uC744 \\uC0DD\\uC131\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB530\\uB77C\\uC11C \\uC0C8\\uB85C\\uC6B4 \\uD615\\uC2DD\\uC758 \\uC124\\uC815 \\uC815\\uBCF4\\uAC00 \\uCD94\\uAC00\\uB418\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"XXXBeanDefinitionReader\"), \"\\uB97C \\uAC1C\\uBC1C\\uC790\\uAC00 \\uC9C1\\uC811 \\uB9CC\\uB4E4\\uC5B4\\uC11C BeanDefinition\\uC744 \\uC0DD\\uC131\\uD558\\uBA74 \\uB41C\\uB2E4.\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanDefinition \\uC815\\uBCF4\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BeanClassName: \\uC0DD\\uC131\\uD560 \\uBE48\\uC758 \\uD074\\uB798\\uC2A4\\uBA85(\\uC790\\uBC14 \\uC124\\uC815 \\uCC98\\uB7FC \\uD329\\uD1A0\\uB9AC \\uC5ED\\uD560\\uC758 \\uBE48\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uC5C6\\uC74C)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"factoryBeanName: \\uD329\\uD1A0\\uB9AC \\uC5ED\\uD560\\uC758 \\uBE48\\uC744 \\uC0AC\\uC6A9\\uD560 \\uACBD\\uC6B0 \\uC774\\uB984(e.g. appConfig) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"factoryMethodName: \\uBE48\\uC744 \\uC0DD\\uC131\\uD560 \\uD329\\uD1A0\\uB9AC \\uBA54\\uC11C\\uB4DC \\uC9C0\\uC815(e.g. memberService) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scope: \\uC2F1\\uAE00\\uD1A4(\\uAE30\\uBCF8\\uAC12) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lazyInit: \\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB97C \\uC0DD\\uC131\\uD560 \\uB54C \\uBE48\\uC744 \\uC0DD\\uC131\\uD558\\uB294 \\uAC83\\uC774 \\uC544\\uB2C8\\uB77C, \\uC2E4\\uC81C \\uBE48\\uC744 \\uC0AC\\uC6A9\\uD560 \\uB54C \\uAE4C\\uC9C0 \\uCD5C\\uB300\\uD55C \\uC0DD\\uC131\\uC744 \\uC9C0\\uC5F0\\uCC98\\uB9AC \\uD558\\uB294\\uC9C0 \\uC5EC\\uBD80 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"InitMethodName: \\uBE48\\uC744 \\uC0DD\\uC131\\uD558\\uACE0, \\uC758\\uC874\\uAD00\\uACC4\\uB97C \\uC801\\uC6A9\\uD55C \\uB4A4\\uC5D0 \\uD638\\uCD9C\\uB418\\uB294 \\uCD08\\uAE30\\uD654 \\uBA54\\uC11C\\uB4DC \\uBA85 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DestroyMethodName: \\uBE48\\uC758 \\uC0DD\\uBA85\\uC8FC\\uAE30\\uAC00 \\uB05D\\uB098\\uC11C \\uC81C\\uAC70\\uD558\\uAE30 \\uC9C1\\uC804\\uC5D0 \\uD638\\uCD9C\\uB418\\uB294 \\uBA54\\uC11C\\uB4DC \\uBA85 \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Constructor arguments, Properties: \\uC758\\uC874\\uAD00\\uACC4 \\uC8FC\\uC785\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uD55C\\uB2E4. (\\uC790\\uBC14 \\uC124\\uC815 \\uCC98\\uB7FC \\uD329\\uD1A0\\uB9AC \\uC5ED\\uD560 \\uC758 \\uBE48\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uC5C6\\uC74C)\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"BeanDefinition \\uC815\\uBCF4 \\uC9C1\\uC811 \\uD655\\uC778\\uD574\\uBCF4\\uAE30\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.beandefinition;\\n\\nimport start.first.AppConfigSpring;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.beans.factory.config.BeanDefinition;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\n\\n\\npublic class BeanDefinitionTest {\\n    \\n    //\\uC790\\uBC14 \\uCF54\\uB4DC\\uC77C \\uB54C \\uBA54\\uD0C0 \\uC815\\uBCF4 \\uD655\\uC778\\n    AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(AppConfigSpring.class);\\n    //XML\\uC77C \\uB54C \\uBA54\\uD0C0 \\uC815\\uBCF4 \\uD655\\uC778\\n    // GenericXmlApplicationContext ac = new GenericXmlApplicationContext(\\\"appConfig.xml\\\");\\n\\n    @Test\\n    @DisplayName(\\\"\\uBE48 \\uC124\\uC815 \\uBA54\\uD0C0\\uC815\\uBCF4 \\uD655\\uC778\\\")\\n    void findApplicationBean() {\\n        String[] beanDefinitionNames = ac.getBeanDefinitionNames();\\n        for (String beanDefinitionName : beanDefinitionNames) {\\n            BeanDefinition beanDefinition =\\n                    ac.getBeanDefinition(beanDefinitionName);\\n            if (beanDefinition.getRole() == BeanDefinition.ROLE_APPLICATION) {\\n                System.out.println(\\\"beanDefinitionName\\\" + beanDefinitionName +\\n                        \\\" beanDefinition = \\\" + beanDefinition);\\n            }\\n        }\\n    }\\n}\\n\\n//out\\n//\\uC804\\uB7B5\\nbeanDefinitionNameappConfigSpring beanDefinition = Generic bean: class [start.first.AppConfigSpring$$EnhancerBySpringCGLIB$$b0b643e9]; scope=singleton; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null\\n//\\uD6C4\\uB7B5\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, \"\\uC2A4\\uD504\\uB9C1 \\uD575\\uC2EC \\uC6D0\\uB9AC - \\uAE30\\uBCF8\\uD3B8, \\uAE40\\uC601\\uD55C, \\uC778\\uD504\\uB7F0\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"스프링 컨테이너 생성 스프링 컨테이너의 생성 AppclicationContext 를 통해 생성한다.  AppclicationContext 는 인터페이스로  AnnotationConfigApplicationContext…","timeToRead":2,"banner":null}},"pageContext":{"slug":"/spring-06-spring-컨테이너와-빈","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}