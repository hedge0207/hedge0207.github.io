{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/spring-02-순수-자바로만-개발하기-회원-관리","result":{"data":{"post":{"__typename":"MdxPost","slug":"/spring-02-순수-자바로만-개발하기-회원-관리","title":"Spring-02.순수 자바로만 개발하기-회원 관리","date":"12.01.2021","tags":[{"name":"Spring","slug":"spring"}],"description":"Spring-02.순수 자바로만 개발하기-회원 관리","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spring-02.순수 자바로만 개발하기-회원 관리\",\n  \"date\": \"2021-01-12T00:00:00.000Z\",\n  \"description\": \"Spring-02.순수 자바로만 개발하기-회원 관리\",\n  \"tags\": [\"Spring\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uD68C\\uC6D0 \\uAD00\\uB9AC \\uC608\\uC81C\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC694\\uAD6C\\uC0AC\\uD56D\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD68C\\uC6D0\\uC744 \\uAC00\\uC785\\uD558\\uACE0 \\uC870\\uD68C\\uD560 \\uC218 \\uC788\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD68C\\uC6D0\\uC740 \\uC77C\\uBC18\\uACFC VIP \\uB450 \\uAC00\\uC9C0 \\uB4F1\\uAE09\\uC774 \\uC788\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD68C\\uC6D0 \\uB370\\uC774\\uD130\\uB294 \\uC790\\uCCB4 DB\\uB97C \\uAD6C\\uCD95\\uD560 \\uC218 \\uC788\\uACE0, \\uC678\\uBD80 \\uC2DC\\uC2A4\\uD15C\\uACFC \\uC5F0\\uB3D9\\uD560 \\uC218 \\uC788\\uB2E4(\\uBBF8\\uD655\\uC815).\"))))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC1C\\uBC1C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"member \\uD328\\uD0A4\\uC9C0 \\uC0DD\\uC131 \\uD6C4 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Member.java\"), \"\\uB97C \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\npublic class Member {\\n    private Long id;\\n    private String name;\\n    private Grade grade;\\n    \\n    //IntelliJ\\uAE30\\uC900 \\uC544\\uB798 \\uCF54\\uB4DC\\uB4E4\\uC740 alt+insert \\uB85C \\uC0DD\\uC131 \\uAC00\\uB2A5\\uD558\\uB2E4.\\n    //\\uC0DD\\uC131\\uC790\\n    public Member(Long id, String name, Grade grade) {\\n        this.id = id;\\n        this.name = name;\\n        this.grade = grade;\\n    }\\n\\n    //getter/setter\\n    public Long getId() {\\n        return id;\\n    }\\n\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public Grade getGrade() {\\n        return grade;\\n    }\\n\\n    public void setId(Long id) {\\n        this.id = id;\\n    }\\n\\n    public void setName(String name) {\\n        this.name = name;\\n    }\\n\\n    public void setGrade(Grade grade) {\\n        this.grade = grade;\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Grade.java\"), \"\\uB97C enum\\uC73C\\uB85C \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\npublic enum Grade {\\n    BASIC,\\n    VIP\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberRepository.java\"), \" \\uB97C \\uC778\\uD130\\uD398\\uC774\\uC2A4\\uB85C \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\npublic interface MemberRepository {\\n\\n    void save(Member member);\\n\\n    Member findById(Long memberId);\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"db\\uC5C6\\uC774 \\uB370\\uC774\\uD130\\uB97C \\uBA54\\uBAA8\\uB9AC\\uC0C1\\uC5D0 \\uC800\\uC7A5\\uD558\\uAE30 \\uC704\\uD55C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemoryMemberRepository.java\"), \" \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\nimport java.util.HashMap;\\nimport java.util.Map;\\n\\npublic class MemoryMemberRepository implements MemberRepository{\\n\\n    //\\uC784\\uC2DC db\\uC758 \\uC5ED\\uD560\\uC744 \\uD560 Map\\uC744 \\uC0DD\\uC131\\n    private static Map<Long,Member> store = new HashMap<>();\\n\\n    @Override\\n    public void save(Member member) {\\n        store.put(member.getId(), member);\\n    }\\n\\n    @Override\\n    public Member findById(Long memberId) {\\n        return store.get(memberId);\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberService.java\"), \"\\uB97C interface\\uB85C \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\npublic interface MemberService {\\n    void join(Member member);\\n    Member findMember(Long memberId);\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberService.java\"), \"\\uC758 \\uAD6C\\uD604\\uCCB4\\uC778 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberServiceImpl.java\"), \"\\uB97C \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\npublic class MemberServiceImpl implements MemberService{\\n\\n    private final MemberRepository memberRepository = new MemoryMemberRepository();\\n\\n    @Override\\n    public void join(Member member) {\\n        memberRepository.save(member);\\n    }\\n\\n    @Override\\n    public Member findMember(Long memberId) {\\n        return memberRepository.findById(memberId);\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD14C\\uC2A4\\uD2B8\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC29\\uBC951. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberApp.java\"), \" \\uD074\\uB798\\uC2A4\\uB97C \\uC0DD\\uC131 \\uD6C4 \\uC2E4\\uD589\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first;\\n\\nimport start.first.member.Grade;\\nimport start.first.member.Member;\\nimport start.first.member.MemberService;\\nimport start.first.member.MemberServiceImpl;\\n\\npublic class MeberApp {\\n    //IntelliJ \\uAE30\\uC900 psvm\\uC744 \\uCE58\\uBA74 \\uC544\\uB798\\uC640 \\uAC19\\uC740 main\\uC758 \\uAD6C\\uC870\\uAC00 \\uC7A1\\uD78C\\uB2E4.\\n    public static void main(String[] args) {\\n        //\\uD68C\\uC6D0 \\uAC00\\uC785\\n        MemberService memberService = new MemberServiceImpl();\\n        Member member = new Member(1L,\\\"memberA\\\", Grade.VIP);\\n        memberService.join(member);\\n        \\n        //\\uD68C\\uC6D0 \\uC870\\uD68C\\n        Member findMember = memberService.findMember(1L);\\n        System.out.println(\\\"join member: \\\" + member.getName());      //join member: memberA\\n        System.out.println(\\\"find member: \\\" + findMember.getName());  //find member: memberA\\n    }\\n}\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBC29\\uBC952. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"src.test.java.start.first.member\"), \"\\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberTest.java\"), \" \\uC0DD\\uC131\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.Test;\\n\\npublic class MemberServiceTest {\\n\\n    MemberService memberService = new MemberServiceImpl();\\n    \\n    //@Test \\uC5B4\\uB178\\uD14C\\uC774\\uC158\\uC744 \\uB2EC\\uACE0\\n    //\\uC544\\uB798 \\uBA54\\uC11C\\uB4DC\\uB97C \\uC2E4\\uD589\\uD588\\uC744 \\uB54C \\uC5D0\\uB7EC\\uAC00 \\uB098\\uC9C0 \\uC54A\\uC73C\\uBA74 \\uC815\\uC0C1\\uC801\\uC73C\\uB85C \\uD14C\\uC2A4\\uD2B8\\uAC00 \\uC644\\uB8CC\\uB41C \\uAC83\\uC774\\uB2E4.\\n    @Test\\n    void join(){\\n        //given: \\uBB34\\uC5C7\\uC774 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C\\n        Member member = new Member(1L,\\\"memberA\\\",Grade.VIP);\\n\\n        //when: \\uBB34\\uC5C7\\uC744 \\uD558\\uBA74\\n        memberService.join(member);\\n        Member findMember = memberService.findMember(1L);\\n\\n        //then: \\uC5B4\\uB5BB\\uAC8C \\uB418\\uB294\\uAC00\\n        Assertions.assertThat(member).isEqualTo(findMember);\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC704 \\uCF54\\uB4DC\\uC758 \\uBB38\\uC81C\\uC810\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC758\\uC874\\uAD00\\uACC4\\uAC00 \\uC778\\uD130\\uD398\\uC774\\uC2A4 \\uBFD0\\uB9CC \\uC544\\uB2C8\\uB77C \\uAD6C\\uD604\\uAE4C\\uC9C0 \\uBAA8\\uB450 \\uC758\\uC874\\uD558\\uB294 \\uBB38\\uC81C\\uC810\\uC774 \\uC874\\uC7AC.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DIP\\uB97C \\uC704\\uBC18\\uD558\\uACE0 \\uC788\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MemberServiceImpl.java\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.member;\\n\\npublic class MemberServiceImpl implements MemberService{\\n    \\n    //\\uC544\\uB798 \\uBD80\\uBD84\\uC5D0\\uC11C private final MemberRepository memberRepository\\uB294 \\uCD94\\uC0C1\\uD654(\\uC778\\uD130\\uD398\\uC774\\uC2A4)\\uC5D0 \\uC758\\uC874\\uD558\\uACE0\\n    //new MemoryMemberRepository() \\uBD80\\uBD84\\uC740 \\uAD6C\\uD604\\uCCB4\\uC5D0 \\uC758\\uC874\\uD558\\uACE0 \\uC788\\uB2E4.\\n    private final MemberRepository memberRepository = new MemoryMemberRepository();\\n\\n    @Override\\n    public void join(Member member) {\\n        memberRepository.save(member);\\n    }\\n\\n    @Override\\n    public Member findMember(Long memberId) {\\n        return memberRepository.findById(memberId);\\n    }\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, \"\\uC2A4\\uD504\\uB9C1 \\uD575\\uC2EC \\uC6D0\\uB9AC - \\uAE30\\uBCF8\\uD3B8, \\uAE40\\uC601\\uD55C, \\uC778\\uD504\\uB7F0\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"회원 관리 예제 요구사항 회원을 가입하고 조회할 수 있다. 회원은 일반과 VIP 두 가지 등급이 있다. 회원 데이터는 자체 DB를 구축할 수 있고, 외부 시스템과 연동할 수 있다(미확정). 개발 member 패키지 생성 후  Member.java…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/spring-02-순수-자바로만-개발하기-회원-관리","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}