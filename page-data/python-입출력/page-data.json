{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/python-입출력","result":{"data":{"post":{"__typename":"MdxPost","slug":"/python-입출력","title":"Python 입출력","date":"13.01.2021","tags":[{"name":"Python","slug":"python"}],"description":"Python 입출력","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Python 입출력\",\n  \"date\": \"2021-01-13T00:00:00.000Z\",\n  \"description\": \"Python 입출력\",\n  \"tags\": [\"Python\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uC0AC\\uC6A9\\uC790 \\uC785\\uCD9C\\uB825\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC0AC\\uC6A9\\uC790\\uAC00 \\uC785\\uB825\\uD55C \\uAC12\\uC744 \\uBCC0\\uC218\\uC5D0 \\uB300\\uC785\\uD558\\uACE0 \\uC2F6\\uC744 \\uACBD\\uC6B0\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"input()\"), \"\\uC744 \\uC0AC\\uC6A9\\uD558\\uBA74 \\uB41C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"var = input()   # \\uC548\\uB155\\uD558\\uC138\\uC694! \\uB97C \\uC785\\uB825\\uD560 \\uACBD\\uC6B0   \\nprint(var)      # \\uC548\\uB155\\uD558\\uC138\\uC694!\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC0AC\\uC6A9\\uC790\\uAC00 \\uC5B4\\uB5A4 \\uAC12\\uC744 \\uB123\\uC5B4\\uC57C \\uD558\\uB294\\uC9C0 \\uC54C \\uC218 \\uC788\\uB3C4\\uB85D \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uC0AC\\uC6A9\\uD558\\uB294 \\uAC83\\uB3C4 \\uAC00\\uB2A5\\uD558\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"num = input(\\\"\\uC22B\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694: \\\")\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"input\\uC73C\\uB85C \\uBC1B\\uC740 \\uC790\\uB8CC\\uC758 \\uACBD\\uC6B0 \\uC5B4\\uB5A4 \\uC790\\uB8CC\\uD615\\uC744 \\uC785\\uB825\\uC73C\\uB85C \\uBC1B\\uB4E0 \\uBAA8\\uB450 \\uBB38\\uC790\\uC5F4\\uB85C \\uCDE8\\uAE09\\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"num = input(\\\"\\uC22B\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694: \\\")  # 3\\uC744 \\uC785\\uB825 \\uD560 \\uACBD\\uC6B0\\nprint(type(num))    # <class 'str'>\\n\\n# \\uB530\\uB77C\\uC11C \\uBC18\\uB4DC\\uC2DC \\uC6D0\\uD558\\uB294 \\uD0C0\\uC785\\uC73C\\uB85C \\uD615\\uBCC0\\uD658\\uC744 \\uD574\\uC918\\uC57C \\uD55C\\uB2E4.\\nnum = int(input(\\\"\\uC22B\\uC790\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694: \\\"))\\nprint(type(num))    # <class 'int'>\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uCD9C\\uB825\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"print()\"), \"\\uB97C \\uC0AC\\uC6A9\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD070 \\uB530\\uC634\\uD45C\\uB85C \\uB458\\uB7EC\\uC2F8\\uC778 \\uBB38\\uC790\\uC5F4\\uC740 + \\uC5F0\\uC0B0\\uACFC \\uB3D9\\uC77C\\uD558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC790\\uC5F4  \\uB744\\uC5B4 \\uC4F0\\uAE30\\uB294 \\uCF64\\uB9C8\\uB85C \\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD55C \\uC904\\uC5D0 \\uACB0\\uACFC\\uAC12 \\uCD9C\\uB825\\uD558\\uACE0 \\uC2F6\\uB2E4\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"end=''\"), \" \\uB97C \\uC635\\uC158\\uC73C\\uB85C \\uC8FC\\uBA74 \\uB41C\\uB2E4. \\uB530\\uC634\\uD45C \\uC548\\uC5D0 \\uCD9C\\uB825 \\uC0AC\\uC774\\uC5D0 \\uB4E4\\uC5B4\\uAC08 \\uBB38\\uC790\\uB97C \\uC785\\uB825\\uD55C\\uB2E4.\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(\\\"\\uC548\\uB155\\\" \\\"\\uD558\\uC138\\uC694\\\")       # \\uC548\\uB155\\uD558\\uC138\\uC694\\nprint(\\\"\\uC548\\uB155\\\"+\\\"\\uD558\\uC138\\uC694\\\")       # \\uC548\\uB155\\uD558\\uC138\\uC694\\nprint(\\\"\\uC548\\uB155\\\",\\\"\\uD558\\uC138\\uC694\\\")       # \\uC548\\uB155 \\uD558\\uC138\\uC694\\nprint(\\\"\\uC548\\uB155\\\"+\\\" \\\"+\\\"\\uD558\\uC138\\uC694\\\")   # \\uC548\\uB155 \\uD558\\uC138\\uC694\\n\\nfor i in range(3):\\n    print(i,end=\\\",\\\")    # 0,1,2,\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uD30C\\uC77C \\uC77D\\uACE0 \\uC4F0\\uAE30\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"open(\\uD30C\\uC77C\\uACBD\\uB85C/\\uD30C\\uC77C\\uBA85,\\uBAA8\\uB4DC)\"), \" \\uC774\\uB77C\\uB294 python \\uB0B4\\uC7A5 \\uD568\\uC218\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACB0\\uACFC\\uAC12\\uC73C\\uB85C \\uD30C\\uC77C \\uAC1D\\uCCB4\\uB97C \\uB3CC\\uB824\\uC900\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC77C\\uCE58\\uD558\\uB294 \\uD30C\\uC77C\\uC774 \\uC5C6\\uC744 \\uACBD\\uC6B0 \\uD30C\\uC77C\\uC744 \\uC0DD\\uC131\\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"txt_file = open(\\\"pract.txt\\\",'w')\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBAA8\\uB4DC\\uB294 \\uB2E4\\uC74C\\uACFC \\uAC19\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"r\"), \" : \\uC77D\\uAE30\\uBAA8\\uB4DC, \\uD30C\\uC77C\\uC744 \\uC77D\\uAE30\\uB9CC \\uD560 \\uB54C \\uC0AC\\uC6A9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"w\"), \" : \\uC4F0\\uAE30\\uBAA8\\uB4DC, \\uD30C\\uC77C\\uC5D0 \\uB0B4\\uC6A9\\uC744 \\uC791\\uC131\\uD560 \\uB54C \\uC0AC\\uC6A9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\"), \" : \\uCD94\\uAC00\\uBAA8\\uB4DC, \\uD30C\\uC77C\\uC758 \\uB9C8\\uC9C0\\uB9C9\\uC5D0 \\uC0C8\\uB85C\\uC6B4 \\uB0B4\\uC6A9\\uC744 \\uCD94\\uAC00 \\uC2DC\\uD0AC \\uB54C \\uC0AC\\uC6A9\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"b\"), \" : \\uBC14\\uC774\\uB108\\uB9AC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"+\"), \" : \\uC77D\\uAE30\\uC640 \\uC4F0\\uAE30 \\uB3D9\\uC2DC\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"t\"), \" : \\uD14D\\uC2A4\\uD2B8, \\uAE30\\uBCF8 \")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB2EB\\uAE30\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"close()\"), \" \\uD568\\uC218\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"txt_file = open(\\\"test.txt\\\",'w')\\ntxt_file.close()\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC791\\uC131\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"write()\"), \"\\uD568\\uC218\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"txt_file = open(\\\"test.txt\\\",'w')\\ntxt_file.write(\\\"\\uC548\\uB155\\uD558\\uC138\\uC694!\\\")\\ntxt_file.close()\\n\\n# \\uD574\\uB2F9 \\uD30C\\uC77C\\uC744 \\uD655\\uC778\\uD574\\uBCF4\\uBA74 \\uBCC0\\uACBD\\uB41C \\uAC83\\uC744 \\uD655\\uC778 \\uAC00\\uB2A5\\uD558\\uB2E4.\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"readline()\"), \"\\uD568\\uC218\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uD30C\\uC77C\\uC744 \\uD55C \\uC904\\uC529 \\uC77D\\uC5B4 \\uB098\\uAC04\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"# test.txt\\n\\\"\\\"\\\"\\n\\uC548\\uB155\\uD558\\uC138\\uC694!\\n\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4!\\n\\uC800\\uB294 \\uC9C0\\uAE08 \\uD589\\uBCF5\\uD569\\uB2C8\\uB2E4!\\n\\\"\\\"\\\"\\n\\ntxt_file = open(\\\"test.txt\\\",'r')\\n\\nfor i in range(3):\\n    print(txt_file.readline())\\n    \\n\\\"\\\"\\\"\\n\\uC548\\uB155\\uD558\\uC138\\uC694!\\n\\n\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4!\\n\\n\\uC800\\uB294 \\uC9C0\\uAE08 \\uD589\\uBCF5\\uD569\\uB2C8\\uB2E4!\\n\\\"\\\"\\\"\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"readlines()\"), \" \\uD568\\uC218\\uB294 \\uD30C\\uC77C\\uC758 \\uBAA8\\uB4E0 \\uC904\\uC744 \\uC77D\\uC5B4\\uC11C \\uD55C \\uC904\\uC744 \\uD558\\uB098\\uC758 \\uC694\\uC18C\\uB85C \\uAC16\\uB294 \\uB9AC\\uC2A4\\uD2B8\\uB97C \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"txt_file = open(\\\"test.txt\\\",'r')\\n\\nprint(txt_file.readlines())  # ['\\uC548\\uB155\\uD558\\uC138\\uC694!\\\\n', '\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4!\\\\n', '\\uC800\\uB294 \\uC9C0\\uAE08 \\uD589\\uBCF5\\uD569\\uB2C8\\uB2E4!']\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"read()\"), \" \\uD568\\uC218\\uB294 \\uD30C\\uC77C\\uC758 \\uBAA8\\uB4E0 \\uB0B4\\uC6A9\\uC744 \\uBB38\\uC790\\uC5F4\\uB85C \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"txt_file = open(\\\"test.txt\\\",'r')\\n\\nprint(txt_file.read())\\n\\\"\\\"\\\"\\n\\uC548\\uB155\\uD558\\uC138\\uC694!\\n\\uBC18\\uAC11\\uC2B5\\uB2C8\\uB2E4!\\n\\uC800\\uB294 \\uC9C0\\uAE08 \\uD589\\uBCF5\\uD569\\uB2C8\\uB2E4!\\n\\\"\\\"\\\"\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"with\\uBB38\\uC740 \\uBE14\\uB85D\\uC744 \\uBC97\\uC5B4\\uB098\\uB294 \\uC21C\\uAC04 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"close()\"), \"\\uB97C \\uC790\\uB3D9\\uC73C\\uB85C \\uC218\\uD589\\uD574\\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"with open(\\\"test.txt\\\",\\\"w\\\") as txt_file:\\n    txt_file.write(\\\"\\uC548\\uB155\\uD558\\uC138\\uC694!\\\")\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wikidocs.net/book/1\"\n  }), \"https://wikidocs.net/book/1\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"사용자 입출력 사용자가 입력한 값을 변수에 대입하고 싶을 경우 input() 을 사용하면 된다. 사용자가 어떤 값을 넣어야 하는지 알 수 있도록 다음과 같이 사용하는 것도 가능하다. input…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/python-입출력","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}