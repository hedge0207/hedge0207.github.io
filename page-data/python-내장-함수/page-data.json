{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/python-내장-함수","result":{"data":{"post":{"__typename":"MdxPost","slug":"/python-내장-함수","title":"Python 내장 함수","date":"13.01.2021","tags":[{"name":"Python","slug":"python"}],"description":"Python 내장 함수","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Python 내장 함수\",\n  \"date\": \"2021-01-13T00:00:00.000Z\",\n  \"description\": \"Python 내장 함수\",\n  \"tags\": [\"Python\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"abs(\\uC22B\\uC790)\"), \": \\uD574\\uB2F9 \\uC22B\\uC790\\uC758 \\uC808\\uB313\\uAC12\\uC744 \\uBC18\\uD658\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(abs(-3))  # 3\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"all(\\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615)\"), \": \\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615\\uC758 \\uC694\\uC18C\\uAC00 \\uBAA8\\uB450 \\uCC38\\uC774\\uBA74 True, \\uD558\\uB098\\uB77C\\uB3C4 \\uAC70\\uC9D3\\uC774\\uBA74 False\\uB97C \\uBC18\\uD658\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"arr1 = [1,2,3,4,5,6]\\narr2 = [0,1,2,3,4,5]  # 0\\uC774 \\uC788\\uC73C\\uBBC0\\uB85C False\\uB97C \\uBC18\\uD658\\narr3 = []             # \\uBE48 \\uB9AC\\uC2A4\\uD2B8\\uC758 \\uACBD\\uC6B0 True\\uB97C \\uBC18\\uD658\\n\\nprint(all(arr1))    # True\\nprint(all(arr2))    # False\\nprint(all(arr3))    # True\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"any(\\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615)\"), \": \\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615\\uC758 \\uC694\\uC18C \\uC911 \\uD558\\uB098\\uB77C\\uB3C4 \\uCC38\\uC774\\uBA74 True, \\uBAA8\\uB450 \\uAC70\\uC9D3\\uC774\\uBA74 False\\uB97C \\uBC18\\uD658\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"arr1 = [0,'',False,[],None]\\narr2 = [0,'',False,[],1]    # 1\\uC774 \\uC788\\uC73C\\uBBC0\\uB85C True\\narr3 = []                   # \\uBE48 \\uB9AC\\uC2A4\\uD2B8\\uC758 \\uACBD\\uC6B0 False\\uB97C \\uBC18\\uD658\\n\\nprint(any(arr1))        # False\\nprint(any(arr2))        # True\\nprint(any(arr3))        # False\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"chr()\"), \": \\uC544\\uC2A4\\uD0A4 \\uCF54\\uB4DC \\uAC12\\uC744 \\uC785\\uB825 \\uBC1B\\uC544 \\uADF8 \\uCF54\\uB4DC\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uBB38\\uC790\\uB97C \\uBC18\\uD658\\uD558\\uB294 \\uD568\\uC218\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(chr(97))  # a\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ord()\"), \": \\uBB38\\uC790\\uB97C \\uC785\\uB825\\uBC1B\\uC544 \\uC544\\uC2A4\\uD0A4 \\uCF54\\uB4DC \\uAC12\\uC744 \\uBC18\\uD658\\uD558\\uB294 \\uD568\\uC218\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(ord(a))   # 97\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dir()\"), \": \\uAC1D\\uCCB4\\uAC00 \\uAC00\\uC9C0\\uACE0 \\uC788\\uB294 \\uBCC0\\uC218\\uB098 \\uD568\\uC218\\uB97C \\uBCF4\\uC5EC\\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(dir([]))\\n\\\"\\\"\\\"\\n['__add__', '__class__', '__class_getitem__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', \\n'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']\\n\\\"\\\"\\\"\\n\\nprint(dir({'a':1}))\\n\\\"\\\"\\\"\\n['__class__', '__class_getitem__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__ior__', '__iter__', '__le__', '__len__', '__lt__', '__ne__', '__new__', '__or__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__ror__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'clear', 'copy', 'fromkeys', 'get', 'items', 'keys', 'pop', 'popitem', 'setdefault', 'update', 'values']\\n\\\"\\\"\\\"\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"divmod(a,b)\"), \": a\\uB97C b\\uB85C \\uB098\\uB208 \\uBAAB\\uACFC \\uB098\\uBA38\\uC9C0\\uB97C \\uD29C\\uD50C \\uD615\\uD0DC\\uB85C \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(divmod(8,3))  # (2, 2)\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"enumerate(\\uC21C\\uC11C\\uAC00 \\uC788\\uB294 \\uC790\\uB8CC\\uD615)\"), \": \\uC21C\\uC11C\\uAC00 \\uC788\\uB294 \\uC790\\uB8CC\\uD615\\uC744 \\uC785\\uB825 \\uBC1B\\uC544 \\uC778\\uB371\\uC2A4 \\uAC12\\uC744 \\uD3EC\\uD568\\uD558\\uB294 \\uAC1D\\uCCB4\\uB97C \\uB3CC\\uB824\\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"for i,fruit in enumerate([\\\"apple\\\",\\\"banana\\\",\\\"mango\\\"]):\\n    print(i,fruit)\\n\\\"\\\"\\\"\\n0 apple\\n1 banana\\n2 mango\\n\\\"\\\"\\\"\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eval()\"), \": \\uC2E4\\uD589 \\uAC00\\uB2A5\\uD55C \\uBB38\\uC790\\uC5F4\\uC744 \\uC785\\uB825\\uC73C\\uB85C \\uBC1B\\uC544 \\uBB38\\uC790\\uC5F4\\uC744 \\uC2E4\\uD589\\uD55C \\uACB0\\uACFC\\uAC12\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(eval('5+7'))              # 12\\nprint(eval('list((1,2,3,4))'))  # [1, 2, 3, 4]\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hex(\\uC815\\uC218)\"), \": \\uC815\\uC218\\uB97C 16\\uC9C4\\uC218\\uB85C \\uBCC0\\uD658\\uD558\\uC5EC \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(hex(1))   # 0x1\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"oct()\"), \": \\uC815\\uC218\\uB97C 8\\uC9C4\\uC218 \\uBB38\\uC790\\uC5F4\\uB85C \\uBCC0\\uACBD\\uD558\\uC5EC \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(oct(1))   # 0o1\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isinstance(\\uC778\\uC2A4\\uD134\\uC2A4, \\uD074\\uB798\\uC2A4\\uBA85)\"), \": \\uC778\\uC2A4\\uD134\\uC2A4\\uAC00 \\uC785\\uB825\\uC73C\\uB85C \\uBC1B\\uC740 \\uD074\\uB798\\uC2A4\\uC758 \\uC778\\uC2A4\\uD134\\uC2A4\\uC778\\uC9C0\\uB97C \\uD310\\uB2E8\\uD558\\uC5EC boolean\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"arr = list()\\nprint(isinstance(arr,list))     # True\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"max()\"), \": \\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615\\uC744 \\uBC1B\\uC544, \\uADF8 \\uCD5C\\uB313\\uAC12\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(max([3,6,9]))     # 9\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"min()\"), \": \\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615\\uC744 \\uBC1B\\uC544, \\uADF8 \\uCD5C\\uC19F\\uAC12\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(min([3,6,9]))     # 3\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pow(a,b)\"), \": a\\uB97C y\\uC81C\\uACF1\\uD55C \\uAC12\\uC744 \\uB3CC\\uB824\\uC8FC\\uB294 \\uD568\\uC218\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(pow(3,4))     # 81\\n\")), mdx(\"br\", null)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"round(\\uC22B\\uC790, [\\uBC18\\uC62C\\uB9BC\\uD560 \\uC790\\uB9AC\\uC218])\"), \":  \\uC22B\\uC790\\uB97C \\uC785\\uB825\\uBC1B\\uC544 \\uBC18\\uC62C\\uB9BC\\uD574 \\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(round(3.4))       # 3\\nprint(round(3.5))       # 4\\nprint(round(3.648,2))   # \\uC18C\\uC218\\uC810 2\\uBC88\\uC9F8 \\uC790\\uB9AC\\uAE4C\\uC9C0 \\uD45C\\uC2DC\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sum()\"), \": \\uC785\\uB825 \\uBC1B\\uC740 \\uB9AC\\uC2A4\\uD2B8\\uB098 \\uD29C\\uD50C\\uC758 \\uBAA8\\uB4E0 \\uAC12\\uC744 \\uD569\\uD574\\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(sum([1,2,3,4,5]))  # 15\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"zip()\"), \": \\uB3D9\\uC77C\\uD55C \\uAC1C\\uC218\\uB85C \\uC774\\uB8E8\\uC5B4\\uC9C4 \\uBC18\\uBCF5 \\uAC00\\uB2A5\\uD55C \\uC790\\uB8CC\\uD615\\uC744 \\uBB36\\uC5B4 \\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(list(zip([1,2,3],[4,5,6],[7,8,9])))   # [(1, 4, 7), (2, 5, 8), (3, 6, 9)]\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wikidocs.net/book/1\"\n  }), \"https://wikidocs.net/book/1\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"abs(숫자) : 해당 숫자의 절댓값을 반환 all(반복 가능한 자료형) : 반복 가능한 자료형의 요소가 모두 참이면 True, 하나라도 거짓이면 False를 반환 any(반복 가능한 자료형) : 반복 가능한 자료형의 요소 중 하나라도 참이면 True…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/python-내장-함수","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}