{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/django-orm","result":{"data":{"post":{"__typename":"MdxPost","slug":"/django-orm","title":"Django ORM","date":"09.01.2021","tags":[{"name":"django","slug":"django"},{"name":"orm","slug":"orm"}],"description":"Django ORM","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Django ORM\",\n  \"date\": \"2021-01-09T20:00:00.000Z\",\n  \"description\": \"Django ORM\",\n  \"tags\": [\"django\", \"orm\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"ORM\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"migrate \\uD560 \\uACBD\\uC6B0 \\uD14C\\uC774\\uBE14\\uBA85\\uC740 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"\\uC571\\uC774\\uB984_\\uBAA8\\uB378\\uBA85(\\uC18C\\uBB38\\uC790)\"), \"\\uC73C\\uB85C \\uC0DD\\uC131\\uB41C\\uB2E4. \\uB530\\uB77C\\uC11C sql\\uB85C \\uB370\\uC774\\uD130\\uB97C \\uC870\\uC791\\uD558\\uACE0\\uC790 \\uD560 \\uB54C\\uB294  \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC811\\uADFC\\uD574\\uC57C \\uD55C\\uB2E4.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"select * from \\uC571\\uC774\\uB984_\\uBAA8\\uB378\\uBA85(\\uC18C\\uBB38\\uC790)\\n\\n--e.g.\\nselect * from people_people\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"orm\\uACFC sql\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"orm\\uC5D0\\uC11C\\uB294 model\\uC744 \\uC815\\uC758\\uD558\\uACE0 migrate\\uB97C \\uD574\\uC918\\uC57C \\uD588\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sql\\uC5D0\\uC11C\\uB294 \\uADF8 \\uB300\\uC2E0 \\uD14C\\uC774\\uBE14\\uC744 \\uC0DD\\uC131\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"orm\\uC740 \\uCFFC\\uB9AC\\uC14B \\uD615\\uD0DC\\uB85C, sql\\uC740 \\uD14C\\uC774\\uBE14 \\uD615\\uD0DC\\uB85C \\uB370\\uC774\\uD130\\uB97C \\uC800\\uC7A5\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uCFFC\\uB9AC\\uC14B\\uC740 \\uCFFC\\uB9AC\\uC758 \\uACB0\\uACFC\\uB85C \\uB098\\uC624\\uB294 \\uC624\\uBE0C\\uC81D\\uD2B8\\uC774\\uB2E4.\")))))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uCFFC\\uB9AC\\uC758 \\uBA54\\uC11C\\uB4DC\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC870\\uD68C\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"get: \\uC624\\uC9C1 \\uD558\\uB098\\uC758 \\uCFFC\\uB9AC \\uACB0\\uACFC\\uB9CC\\uC744 \\uBC18\\uD658, \\uD558\\uB098\\uAC00 \\uC544\\uB2C8\\uBA74 \\uBAA8\\uB450 \\uC5D0\\uB7EC(\\uC989, 2\\uAC1C \\uC774\\uC0C1\\uC774\\uAC70\\uB098 0\\uAC1C\\uC774\\uBA74 \\uC5D0\\uB7EC)\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"-ex. \\uD2B9\\uC815 \\uAC8C\\uC2DC\\uAE00\\uB85C \\uC5F0\\uACB0\\uD574 \\uC904 \\uACBD\\uC6B0 \\uD558\\uB098\\uC758 \\uAC8C\\uC2DC\\uAE00 \\uBC88\\uD638\\uB97C \\uC694\\uCCAD\\uD55C \\uAC83\\uC774 \\uC544\\uB2C8\\uBA74 \\uBAA8\\uB450 \\uC5D0\\uB7EC\\uB97C \\uB744\\uC6B4\\uB2E4.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"-\\uC624\\uBE0C\\uC81D\\uD2B8\\uB97C \\uBC14\\uB85C \\uBC18\\uD658\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"Article.objects.get(title=\\\"\\uC81C\\uBAA91\\\")\\n\\nout\\n<Article:Article object (4)>\\n    \\nUser.objects.get(last_name='\\uCD5C')\\n# MultipleObjectsReturned: get() returned more than one User -- it returned 3!\\n#1\\uAC1C \\uC774\\uC0C1\\uC758 User(3\\uAC1C)\\uB97C \\uB9AC\\uD134\\uD558\\uC5EC \\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD \\n\\nUser.objects.get(id=1000)\\n# DoesNotExist: User matching query does not exist.\\n# \\uB9AC\\uD134\\uD560 \\uAC83\\uC774 \\uC5C6\\uC5B4 \\uC560\\uB7EC\\n\")))))))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- filter: \\uCFFC\\uB9AC\\uC14B(\\uBE44\\uC5B4 \\uC788\\uB354\\uB77C\\uB3C4)\\uC744 \\uBC18\\uD658(.values\\uB3C4 QuerySet\\uC744 \\uBC18\\uD658\\uD55C\\uB2E4.)\\n\\n  ex.\\uAC80\\uC0C9\\uC744 \\uD560 \\uB54C\\uC5D0\\uB294 \\uADF8\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uBAA8\\uB4E0 \\uAC8C\\uC2DC\\uAE00\\uC744 \\uBCF4\\uC5EC\\uC8FC\\uACE0, \\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC5B4\\uB3C4(\\uBE44\\uC5B4\\uB3C4) \\uBCF4\\uC5EC\\uC900\\uB2E4.\\n\\n  ```python\\n  Article.objects.filter(title=\\\"\\uC81C\\uBAA91\\\")\\n  \\n  out\\n  <QuerySet [<Article:Article object (4)>]>\\n  \\n  #get\\uACFC \\uB2EC\\uB9AC object\\uB97C \\uBC14\\uB85C \\uBC18\\uD658\\uD558\\uC9C0 \\uC54A\\uC73C\\uBBC0\\uB85C object\\uB97C \\uBC18\\uD658\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uB4A4\\uC5D0 \\uC778\\uB371\\uC2A4\\uB97C \\uBD99\\uC5EC\\uC57C \\uD55C\\uB2E4.\\n  Article.objects.filter(title=\\\"\\uC81C\\uBAA91\\\")[0]\\n  #\\uC774\\uB807\\uAC8C \\uD558\\uBA74 \\uD574\\uB2F9\\uD558\\uB294 \\uC624\\uBE0C\\uC81D\\uD2B8 \\uC911 \\uCCAB \\uBC88\\uC9F8 \\uC624\\uBE0C\\uC81D\\uD2B8\\uB97C \\uBC18\\uD658\\uD55C\\uB2E4.\\n  \\n  #e.g.\\n  type(People.objects.filter(age=47).values('first_name')) django.db.models.query.QuerySet #QuerySet\\uC744 \\uBC18\\uD658\\n  \\n  type(People.objects.filter(age=47).values('first_name')[0])                     dict #dict\\uD0C0\\uC785\\uC744 \\uBC18\\uD658\\n  ```\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Django shell: python interactive interpreter\\uB97C django \\uD504\\uB85C\\uC81D\\uD2B8\\uC5D0 \\uB9DE\\uAC8C \\uC4F8 \\uC218 \\uC788\\uB294 \\uAE30\\uB2A5\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC774\\uB97C \\uC0AC\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\uC11C\\uB294 \\uCD94\\uAC00\\uC801\\uC778 \\uD328\\uD0A4\\uC9C0 \\uC124\\uCE58\\uAC00 \\uD544\\uC694\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ pip install django-extensions ipython\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"django-extensions\"), \" \\uB294 django \\uAC1C\\uBC1C\\uC5D0 \\uC788\\uC5B4\\uC11C \\uC720\\uC6A9\\uD55C \\uAE30\\uB2A5\\uB4E4\\uC744 \\uAE30\\uBCF8\\uC801\\uC73C\\uB85C \\uC81C\\uACF5\\uD55C\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ipython\"), \" \\uC740 \\uC778\\uD130\\uB809\\uD2F0\\uBE0C \\uC258\\uC744 \\uC870\\uAE08 \\uB354 \\uD3B8\\uD558\\uAC8C \\uD65C\\uC6A9\\uD558\\uAE30 \\uC704\\uD574\\uC11C \\uC124\\uCE58.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC124\\uCE58 \\uD6C4 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"settings.py\"), \" \\uC5D0 \\uB2E4\\uC74C\\uC758 \\uB0B4\\uC6A9\\uC744 \\uCD94\\uAC00\\uD55C\\uB2E4. (\\uCF64\\uB9C8 \\uC720\\uC758)\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"# django_crud/settings.py\\nINSTALLED_APPS = [\\n    ...\\n    'django_extensions',\\n    'articles',\\n]\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uADF8\\uB9AC\\uACE0 \\uC774\\uC81C\\uBD80\\uD130\\uB294 \\uC544\\uB798\\uC758 \\uBA85\\uB839\\uC5B4\\uB97C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ python manage.py shell_plus\\n\\n\\n#\\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC785\\uB825\\uD558\\uBA74 sql \\uD615\\uC2DD\\uC73C\\uB85C\\uB3C4 \\uBCF4\\uC5EC\\uC900\\uB2E4.\\n$ python manage.py shell_plus --print-sql\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC258 \\uC885\\uB8CC \\uBA85\\uB839\\uC5B4\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ctrl+d\"), \" \\uC774\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC258 \\uCC3D\\uC5D0\\uC11C \\uC544\\uB798\\uC640 \\uAC19\\uC740 \\uBA85\\uB839\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uBA74 SQL command\\uB85C \\uC5B4\\uB5BB\\uAC8C \\uD45C\\uD604\\uB418\\uB294\\uC9C0 \\uBCF4\\uC5EC\\uC900\\uB2E4.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"print(\\uCFFC\\uB9AC\\uC14B.query)\\n#\\uCFFC\\uB9AC\\uC14B\\uC77C \\uACBD\\uC6B0\\uC5D0\\uB9CC \\uAC00\\uB2A5\\uD558\\uB2E4.\\n\\n#e.g.\\npeople=People.objects.all()\\ntype(users)\\ndjango.db.models.query.QuerySet  #\\uACB0\\uACFC\\uAC00 queryset\\uC774\\uBBC0\\uB85C\\n\\nprint(people.query)  #\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\n\\nSELECT \\\"people_people\\\".\\\"id\\\", \\\"people_people\\\".\\\"first_name\\\", \\\"people_people\\\".\\\"last_name\\\", \\\"people_people\\\".\\\"age\\\", \\\"people_people\\\".\\\"country\\\", \\\"people_people\\\".\\\"phone\\\", \\\"people_people\\\".\\\"balance\\\" FROM \\\"people_people\\\"\\n\")))))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"ORM \\uBB38\\uBC95\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"makemigrations\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9C8\\uC774\\uADF8\\uB808\\uC774\\uC158 \\uC0DD\\uC131\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"migrate\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9C8\\uC774\\uADF8\\uB808\\uC774\\uC158 \\uD30C\\uC77C\\uC758 \\uB0B4\\uC6A9\\uC744 DB\\uC5D0 \\uCD5C\\uC885 \\uBC18\\uC601\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"showmigrations\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB9C8\\uC774\\uADF8\\uB808\\uC774\\uC158 DB \\uBC18\\uC601 \\uC5EC\\uBD80 \\uD655\\uC778\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$python manage.py showmigrations\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sqlmigrate\"), \" \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"migration\\uC744 \\uC704\\uD55C SQL statements\\uB97C \\uBCF4\\uC5EC\\uC900\\uB2E4. \\uC5B4\\uB5A4 \\uAE30\\uB2A5\\uC744 \\uC2E4\\uD589\\uD558\\uB294 \\uBA85\\uB839\\uC5B4\\uB294 \\uC544\\uB2C8\\uACE0, \\uB0B4\\uAC00 django\\uC5D0\\uC11C class\\uB97C \\uD1B5\\uD574 \\uC0DD\\uC131\\uD558\\uAC70\\uB098 \\uBCC0\\uACBD\\uD55C table\\uC774 SQL command\\uB85C \\uC5B4\\uB5BB\\uAC8C \\uD45C\\uD604\\uB418\\uB294\\uC9C0 \\uBCF4\\uC5EC\\uC8FC\\uB294 \\uAE30\\uB2A5\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ python manage.py sqlmigrate \\uC571\\uC774\\uB984 migrations\\uD30C\\uC77C \\uBC88\\uD638\\n\\n#e.g.\\n$ python manage.py sqlmigrate people 0001\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD14C\\uC774\\uBE14 \\uC0DD\\uC131: sql\\uC758 \\uD14C\\uC774\\uBE14 \\uC0DD\\uC131\\uC5D0 \\uB300\\uC751\\uD558\\uB294 orm\\uC758 \\uD14C\\uC774\\uBE14 \\uC0DD\\uC131\\uC740 model\\uC744 \\uC815\\uC758\\uD558\\uACE0 migrate\\uD558\\uB294 \\uAC83\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"#models.py\\nclass People(models.Model):\\n    first_name = models.CharField(max_length=10)\\n    last_name = models.CharField(max_length=10)\\n    age = models.IntegerField()\\n    country = models.CharField(max_length=10)\\n    phone = models.CharField(max_length=15)\\n    balance = models.IntegerField()\\n\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"$ python manage.py makemigrations\\n$ python manage.py migrate\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBAA8\\uB4E0 \\uB808\\uCF54\\uB4DC \\uC870\\uD68C(R)\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"select * from\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"\\uBAA8\\uB378\\uBA85.objects.all()\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD2B9\\uC815 \\uB808\\uCF54\\uB4DC \\uC870\\uD68C(R)\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WHERE\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"\\uBAA8\\uB378\\uBA85.objects.get(id=100)  #get\\uC740 \\uC624\\uC9C1 \\uD558\\uB098\\uC758 \\uCFFC\\uB9AC \\uACB0\\uACFC\\uB9CC\\uC744 \\uBC18\\uD658\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB808\\uCF54\\uB4DC \\uC0DD\\uC131(C) - \\uAE30\\uC874\\uC758 C\\uBC29\\uC2DD\\uACFC \\uB3D9\\uC77C\\uD558\\uAC8C \\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"INSERT INTO\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"#\\uC774 \\uC678\\uC758 2\\uAC00\\uC9C0 \\uBC29\\uBC95\\uC744 \\uC0AC\\uC6A9\\uD574\\uB3C4 \\uB9CC\\uB4E4 \\uC218 \\uC788\\uB2E4(ref. CRUD \\uD30C\\uD2B8).\\n\\uBAA8\\uB378\\uBA85.objects.create(column=value)\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB808\\uCF54\\uB4DC \\uC218\\uC815(U) \"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"SET\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\uC624\\uBE0C\\uC81D\\uD2B8=\\uBAA8\\uB378\\uBA85.objects.get(\\uC870\\uAC74)\\n\\uC624\\uBE0C\\uC81D\\uD2B8.column = \\uC218\\uC815\\uD560 \\uB0B4\\uC6A9\\n\\uC624\\uBE0C\\uC81D\\uD2B8.save()\\n\\n#e.g.\\nuser = User.objects.get(id=100)\\nuser.last_name = '\\uC131'\\nuser.save()\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uB808\\uCF54\\uB4DC \\uC0AD\\uC81C(D)\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DELETE\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"\\uBAA8\\uB378\\uBA85.objects.get(\\uC870\\uAC74).delete()\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC870\\uAC74\\uC5D0 \\uB530\\uB978 \\uCFFC\\uB9AC\\uBB38\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAC1C\\uC218 \\uC138\\uAE30\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"COUNT\"))))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\uBAA8\\uB378\\uBA85.objects.count()  #.all\\uC740 \\uB4E4\\uC5B4\\uAC00\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB41C\\uB2E4(\\uB4E4\\uC5B4\\uAC00\\uB3C4 \\uB41C\\uB2E4).\\n\\n#e.g.\\nUser.objects.count()\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC870\\uAC74\\uC5D0 \\uB530\\uB978 \\uAC12\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"sql\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WHERE\"))))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\uBAA8\\uB378\\uBA85.objects.filter(\\uC870\\uAC74).values(\\uAC00\\uC838\\uC62C \\uAC12)\\n\\n#e.g.\\nUser.objects.filter(age=30).values('first_name')\\n\\n\\n#\\uC870\\uAC74\\uC774 2\\uAC1C \\uC774\\uC0C1\\uC77C \\uACBD\\uC6B0\\n\\n#\\uC870\\uAC74\\uC774 AND\\uC77C \\uACBD\\uC6B0\\n#\\uBC29\\uBC951. \\n\\uBAA8\\uB378\\uBA85.objects.filter(\\uC870\\uAC741, \\uC870\\uAC742).values(\\uAC00\\uC838\\uC62C \\uAC12)\\n#e.g.\\nUser.objects.filter(age=30, last_name='\\uAE40').count()\\n\\n#\\uBC29\\uBC952.\\uBA54\\uC11C\\uB4DC \\uCCB4\\uC774\\uB2DD\\n\\uBAA8\\uB378\\uBA85.objects.filter(\\uC870\\uAC741).filter(\\uC870\\uAC742).values(\\uAC00\\uC838\\uC62C \\uAC12)\\n#e.g.\\nUser.objects.filter(age=30).filter(last_name='\\uAE40').count()\\n\\n#\\uBC29\\uBC952\\uC640 \\uAC19\\uC774 filter\\uC5D0 \\uB2E4\\uC2DC filter\\uB97C \\uC4F0\\uB294 \\uAC83\\uC774 \\uAC00\\uB2A5\\uD55C \\uC774\\uC720\\n#filter\\uB294 queryset\\uC5D0 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB2E4.\\n#filter\\uC758 \\uACB0\\uACFC\\uB3C4 queryset\\uC774\\uAE30\\uC5D0 \\uB2E4\\uC2DC filter \\uC801\\uC6A9\\uC774 \\uAC00\\uB2A5\\uD558\\uB2E4(\\uAE30\\uB9B0\\uC758 \\uBC88\\uC2DD\\uC758 \\uACB0\\uACFC \\uAE30\\uB9B0\\uC774 \\uB098\\uC624\\uACE0 \\uADF8 \\uAE30\\uB9B0\\uC774 \\uC790\\uB77C\\uC11C \\uB2E4\\uC2DC \\uBC88\\uC2DD\\uC774 \\uAC00\\uB2A5\\uD55C \\uAC83\\uACFC \\uBE44\\uC2B7\\uD558\\uB2E4).\\n\\n\\n#\\uC870\\uAC74\\uC774 OR\\uC77C \\uACBD\\uC6B0\\nfrom django.db.models import Q  #Q\\uB97C import\\uD574\\uC57C \\uD55C\\uB2E4.\\n#Q\\uB85C \\uBB36\\uACE0 |\\uB85C \\uAD6C\\uBD84\\uD55C\\uB2E4.\\n\\uBAA8\\uB378\\uBA85.objects.filter(Q(\\uC870\\uAC741)|Q(\\uC870\\uAC742))\\n\\n#e.g.\\nUser.objects.filter(Q(balance__gte=2000)|Q(age__lte=40)).count()\\n\\n\\n#\\uC5EC\\uB7EC \\uB370\\uC774\\uD130\\uB97C \\uD55C \\uBC88\\uC5D0 \\uAC00\\uC838\\uC640\\uC57C \\uD560 \\uACBD\\uC6B0\\n#\\uC608\\uB97C \\uB4E4\\uC5B4 \\uAC01\\uAC01 1,3,5,7,9\\uC758 pk \\uAC12\\uC744 \\uAC00\\uC9C0\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uAC00\\uC838\\uC640\\uC57C \\uD560 \\uACBD\\uC6B0 \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uD558\\uBA74 \\uB41C\\uB2E4.\\n#\\uAF2D \\uC544\\uB798\\uC640 \\uAC19\\uC774 list\\uAC00 \\uC544\\uB2C8\\uB77C queryset\\uC774\\uB77C\\uB3C4 \\uC774\\uB984\\uB9CC \\uB9DE\\uCDB0\\uC8FC\\uBA74 \\uC54C\\uC544\\uC11C id\\uAC12\\uC774 \\uB4E4\\uC5B4\\uAC00\\uAC8C \\uB41C\\uB2E4.\\ndef aaa(request):\\n    li = [1,2]\\n    users = User.objects.filter(pk__in=li)\\n    print(users)\\n    \\n#out\\n<QuerySet [<User: qqq@qqq.com>, <User: www@www.com>]>\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"lookup\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\uBAA8\\uB378\\uBA85.objects.filter(column__lookup)\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB300\\uC18C\\uAD00\\uACC4\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"'''\\n__gte:>=\\n__gt:>\\n__lte:<=\\n__lt:<\\n'''\\n\\n#e.g.\\nUser.objects.filter(age__gte=30)\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB38\\uC790\\uC5F4 \\uD3EC\\uD568 \\uAD00\\uB828\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\\"\\\"\\\"\\ni\\uB77C\\uB294 prefix\\uB294 case-insensitive(\\uB300\\uC18C\\uBB38\\uC790 \\uAD6C\\uBD84X)\\uC758 \\uC758\\uBBF8\\uB97C \\uC9C0\\uB2CC\\uB2E4.\\niexact: \\uC815\\uD655\\uD558\\uAC8C \\uC77C\\uCE58\\uD558\\uB294\\uAC00\\ncontains, icontains: \\uD2B9\\uC815 \\uBB38\\uC790\\uC5F4\\uC744 \\uD3EC\\uD568\\uD558\\uB294\\uAC00\\nstartswith, istartswith: \\uD2B9\\uC815 \\uBB38\\uC790\\uC5F4\\uB85C \\uC2DC\\uC791\\uD558\\uB294\\uAC00\\nendswith, iendswith: \\uD2B9\\uC815 \\uBB38\\uC790\\uC5F4\\uB85C \\uB05D\\uB098\\uB294\\uAC00\\n\\\"\\\"\\\"\\n\\n#e.g.\\nUser.objects.filter(phone__startswith='02-') #02\\uB85C \\uC2DC\\uC791\\uD558\\uB294 \\uB370\\uC774\\uD130\\uB97C \\uC870\\uD68C\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uAE30\\uD0C0\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC815\\uB82C\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"#\\uB0B4\\uB9BC\\uCC28\\uC21C\\n\\uBAA8\\uB378\\uBA85.objects.order_by('-column')\\n\\n#\\uC624\\uB984\\uCC28\\uC21C\\n\\uBAA8\\uB378\\uBA85.objects.order_by('column')\\n\\n#\\uC81C\\uD55C\\uC744 \\uB458 \\uACBD\\uC6B0(sql\\uC758 LIMIT)\\n\\uBAA8\\uB378\\uBA85.objects.order_by('column')[:\\uC22B\\uC790]\\n\\n#\\uC784\\uC758\\uC758 \\uC21C\\uC11C\\uB97C \\uCC3E\\uC744 \\uACBD\\uC6B0(sql\\uC758 OFFSET)\\n\\uBAA8\\uB378\\uBA85.objects.order_by('column')[\\uC22B\\uC790] #0\\uBD80\\uD130 \\uC2DC\\uC791\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC911\\uBCF5 \\uC5C6\\uC774 \\uC870\\uD68C\\uD558\\uACE0\\uC790 \\uD560 \\uACBD\\uC6B0\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"#distinct()\\uC0AC\\uC6A9\\n#e.g.\\n#phone\\uC774 \\u2018011\\u2019\\uB85C \\uC2DC\\uC791\\uD558\\uB294 \\uC0AC\\uB78C\\uB4E4\\uC758 \\uB098\\uC774\\uB97C \\uC911\\uBCF5 \\uC5C6\\uC774 \\uC870\\uD68C\\nUser.objects.filter(phone__startswith='011').values('age').distinct()\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uD45C\\uD604\\uC2DD\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD45C\\uD604\\uC2DD \\uC0AC\\uC6A9\\uC744 \\uC704\\uD574\\uC11C\\uB294 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aggregate\"), \"\\uB97C \\uC54C\\uC544\\uC57C \\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"from django.db.models import Sum,Avg,Max,Min\\n\\n\\uBAA8\\uB378\\uBA85.objects.aggregate(\\uD45C\\uD604\\uC2DD('column'))\\n\\n#e.g.\\nUser.objects.aggregate(Avg('age'))\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"group by\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"annotate\\uB294 \\uAC1C\\uBCC4 item\\uC5D0 \\uCD94\\uAC00 \\uD544\\uB4DC\\uB97C \\uAD6C\\uC131\\uD55C\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-python\"\n  }), \"\\uBAA8\\uB378\\uBA85.objects.values('column').annotate(\\uD45C\\uC2DC\\uD560 \\uB0B4\\uC6A9)\\n\")))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"ORM migrate 할 경우 테이블명은  앱이름_모델명(소문자) 으로 생성된다. 따라서 sql로 데이터를 조작하고자 할 때는  아래와 같이 접근해야 한다. orm과 sql orm에서는 model을 정의하고 migrate를 해줘야 했다. sql…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/django-orm","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}