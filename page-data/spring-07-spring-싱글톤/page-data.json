{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/spring-07-spring-싱글톤","result":{"data":{"post":{"__typename":"MdxPost","slug":"/spring-07-spring-싱글톤","title":"Spring-07.Spring 싱글톤","date":"12.01.2021","tags":[{"name":"Spring","slug":"spring"},{"name":"Singleton","slug":"singleton"}],"description":"Spring-Spring-07.Spring 싱글톤","canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spring-07.Spring 싱글톤\",\n  \"date\": \"2021-01-12T00:00:00.000Z\",\n  \"description\": \"Spring-Spring-07.Spring 싱글톤\",\n  \"tags\": [\"Spring\", \"Singleton\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"\\uC6F9 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uACFC \\uC2F1\\uAE00\\uD1A4\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB300\\uBD80\\uBD84\\uC758 \\uC2A4\\uD504\\uB9C1 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC740 \\uC6F9 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC774\\uB098 \\uC6F9\\uC774 \\uC544\\uB2CC \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uB3C4 \\uAC1C\\uBC1C \\uAC00\\uB2A5\\uD558\\uB2E4.\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC6F9 \\uC560\\uD50C\\uB9AC\\uCF00\\uC774\\uC158\\uC740 \\uBCF4\\uD1B5 \\uC5EC\\uB7EC \\uACE0\\uAC1D\\uC774 \\uB3D9\\uC2DC\\uC5D0 \\uC694\\uCCAD\\uC744 \\uD55C\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC544\\uB798 \\uCF54\\uB4DC\\uC758 \\uACBD\\uC6B0\\uC5D0 2\\uBA85\\uC774 \\uC694\\uCCAD\\uD558\\uBA74 2\\uAC1C\\uC758 \\uAC1D\\uCCB4\\uAC00, 5\\uBA85\\uC774 \\uC694\\uCCAD\\uD558\\uBA74 5\\uAC1C\\uC758 \\uAC1D\\uCCB4\\uAC00, 10\\uB9CC\\uBA85\\uC774 \\uC694\\uCCAD\\uD558\\uBA74 10\\uB9CC\\uAC1C\\uC758 \\uAC1D\\uCCB4\\uAC00 \\uC0DD\\uC131\\uB418\\uACE0 \\uC18C\\uBA78\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBA54\\uBAA8\\uB9AC \\uB0AD\\uBE44\\uAC00 \\uAD49\\uC7A5\\uD788 \\uC2EC\\uD55C \\uBC29\\uC2DD\\uC774\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB530\\uB77C\\uC11C \\uC774\\uB97C \\uD574\\uACB0\\uD558\\uAE30 \\uC704\\uD574 \\uD574\\uB2F9 \\uAC1D\\uCCB4\\uAC00 \\uB531 1\\uAC1C\\uB9CC \\uC0DD\\uC131\\uB418\\uACE0, \\uACF5\\uC720\\uD558\\uB3C4\\uB85D \\uC124\\uACC4\\uD55C\\uB2E4(\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134).\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport start.first.AppConfigSpring;\\nimport start.first.member.MemberService;\\n\\npublic class SingletonTest {\\n    \\n    @Test\\n    @DisplayName(\\\"\\uC2A4\\uD504\\uB9C1 \\uC5C6\\uB294 \\uC21C\\uC218\\uD55C DI \\uCEE8\\uD14C\\uC774\\uB108\\\")\\n    void pureContainer(){\\n        AppConfigSpring appConfigSpring = new AppConfigSpring();\\n        \\n        //\\uD55C \\uC720\\uC800\\uAC00 \\uC870\\uD68C, \\uD638\\uCD9C\\uB420 \\uB54C\\uB9C8\\uB2E4 MemberService\\uC758 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\n        MemberService memberService1 = appConfigSpring.memberService();\\n\\n        //\\uB2E4\\uB978 \\uC720\\uC800\\uAC00 \\uC870\\uD68C, \\uD638\\uCD9C\\uB420 \\uB54C\\uB9C8\\uB2E4 MemberService\\uC758 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\n        MemberService memberService2 = appConfigSpring.memberService();\\n\\n        //\\uB450 \\uAC1D\\uCCB4\\uC758 \\uCC38\\uC870\\uAC12\\uC774 \\uB2E4\\uB974\\uB2E4. \\uC989 \\uB9E4\\uBC88 \\uC0C8\\uB85C \\uC0DD\\uC131\\uD55C\\uB2E4.\\n        System.out.println(\\\"memberService1 = \\\" + memberService1); \\n        //memberService1 = start.first.member.MemberServiceImpl@5542c4ed\\n        System.out.println(\\\"memberService2 = \\\" + memberService2); \\n        //memberService2 = start.first.member.MemberServiceImpl@1573f9fc\\n        \\n        //\\uC815\\uB9D0 \\uB458\\uC774 \\uB2E4\\uB978\\uC9C0 \\uAC80\\uC99D\\n        Assertions.assertThat(memberService1).isNotSameAs(memberService2);\\n\\n    }\\n\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134: \\uD074\\uB798\\uC2A4\\uC758 \\uC778\\uC2A4\\uD134\\uC2A4\\uAC00 \\uB531 1\\uAC1C\\uB9CC \\uC0DD\\uC131\\uB418\\uB294 \\uAC83\\uC744 \\uBCF4\\uC7A5\\uD558\\uB294 \\uB514\\uC790\\uC778 \\uD328\\uD134\\uC774\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC1D\\uCCB4 \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C 2\\uAC1C \\uC774\\uC0C1 \\uC0DD\\uC131\\uD558\\uC9C0 \\uBABB\\uD558\\uB3C4\\uB85D \\uB9C9\\uC544\\uC57C \\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC744 \\uAD6C\\uD604\\uD558\\uB294 \\uBC29\\uBC95\\uC740 \\uB2E4\\uC591\\uD558\\uB2E4. \\uADF8 \\uC911 \\uC544\\uB798 \\uC608\\uC2DC\\uB294 \\uAC1D\\uCCB4\\uB97C \\uBBF8\\uB9AC \\uC0DD\\uC131\\uD574\\uB450\\uB294 \\uAC00\\uC7A5 \\uB2E8\\uC21C\\uD558\\uACE0 \\uC548\\uC804\\uD55C \\uBC29\\uBC95\\uC774\\uB2E4.\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\npublic class SingletonService {\\n\\n    //\\uD074\\uB798\\uC2A4 \\uC790\\uCCB4\\uB97C \\uD074\\uB798\\uC2A4 \\uB0B4\\uBD80\\uC5D0 private static\\uC73C\\uB85C \\uC120\\uC5B8\\n    private static final SingletonService instance = new SingletonService();\\n\\n    //\\uC774\\uC81C\\uBD80\\uD130 \\uD638\\uCD9C \\uB420 \\uB54C \\uACC4\\uC18D \\uC0C8\\uB85C\\uC6B4 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\uD558\\uB294 \\uAC83\\uC774 \\uC544\\uB2C8\\uB77C \\uC704\\uC5D0\\uC11C \\uC0DD\\uC131\\uD55C \\uAC1D\\uCCB4\\uB97C \\uB118\\uAE30\\uAC8C \\uB41C\\uB2E4. \\uB530\\uB77C\\uC11C \\uD56D\\uC0C1 \\uAC19\\uC740 \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uBC18\\uD658\\uD55C\\uB2E4.\\n    //public\\uC73C\\uB85C \\uC5F4\\uC5B4\\uC11C \\uAC1D\\uCCB4 \\uC778\\uC2A4\\uD134\\uC2A4\\uAC00 \\uD544\\uC694\\uD558\\uBA74 \\uC624\\uC9C1 \\uC774 static \\uBA54\\uC11C\\uB4DC\\uB97C \\uD1B5\\uD574\\uC11C\\uB9CC \\uC870\\uD68C\\uD558\\uB3C4\\uB85D \\uD55C\\uB2E4.\\n    public static SingletonService getInstance(){\\n        return instance;\\n    }\\n\\n    //\\uC704\\uC5D0\\uC11C \\uAC1D\\uCCB4\\uB97C \\uACF5\\uC720\\uD558\\uB3C4\\uB85D \\uCF54\\uB4DC\\uB97C \\uC9F0\\uB294\\uB370 \\uB2E4\\uB978 \\uACF3\\uC5D0\\uC11C \\uB2E4\\uC2DC \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uC4F0\\uBA74 \\uB610 \\uAC1D\\uCCB4\\uAC00 \\uACC4\\uC18D \\uC0DD\\uC131\\uB418\\uBBC0\\uB85C \\uB2E4\\uB978 \\uACF3\\uC5D0\\uC11C\\uB294 \\uC4F0\\uC9C0 \\uBABB\\uD558\\uAC8C \\uD574\\uC57C \\uD55C\\uB2E4.\\n    //\\uB2E4\\uB978 \\uACF3\\uC5D0\\uC11C \\uB2E4\\uC2DC SingletonService\\uC758 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\uD558\\uC9C0 \\uBABB\\uD558\\uB3C4\\uB85D private\\uC744 \\uAC78\\uC5B4\\uB454\\uB2E4.\\n    //SingletonService singletonService = new SingletonService(); \\uC640 \\uAC19\\uC740 \\uCF54\\uB4DC\\uB97C \\uC774\\uC81C \\uB2E4\\uB978 \\uACF3\\uC5D0\\uC11C\\uB294 \\uC4F8 \\uC218 \\uC5C6\\uB2E4.\\n    private SingletonService(){\\n    }\\n    \\n    public void logic(){\\n        System.out.println(\\\"\\uC2F1\\uAE00\\uD1A4 \\uAC1D\\uCCB4 \\uB85C\\uC9C1 \\uD638\\uCD9C\\\");\\n    }\\n}\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD14C\\uC2A4\\uD2B8\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport start.first.AppConfigSpring;\\nimport start.first.member.MemberService;\\n\\npublic class SingletonTest {\\n    //\\uC804\\uB7B5(\\uC2A4\\uD504\\uB9C1 \\uC5C6\\uB294 \\uC21C\\uC218\\uD55C DI \\uCEE8\\uD14C\\uC774\\uB108)\\n\\n    @Test\\n    @DisplayName(\\\"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC744 \\uC801\\uC6A9\\uD55C \\uAC1D\\uCCB4 \\uC0AC\\uC6A9\\\")\\n    void singtonServiceTest(){\\n        //SingletonService\\uC5D0 private\\uC744 \\uAC78\\uC5B4\\uB480\\uC73C\\uBBC0\\uB85C \\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uB2E4\\uB978 \\uACF3\\uC5D0\\uC11C \\uC0C8\\uB85C \\uC0DD\\uC131 \\uD560 \\uC218 \\uC5C6\\uB2E4.\\n        //new SingletonService();\\n        SingletonService singletonService1 = SingletonService.getInstance();\\n        SingletonService singletonService2 = SingletonService.getInstance();\\n\\n        //\\uB458\\uC758 \\uCC38\\uC870\\uAC12\\uC774 \\uB3D9\\uC77C\\uD55C\\uB2E4.\\n        System.out.println(\\\"singletonService1 = \\\" + singletonService1);\\n        //singletonService1 = start.first.singleton.SingletonService@1165b38\\n        System.out.println(\\\"singletonService2 = \\\" + singletonService2);\\n        //singletonService2 = start.first.singleton.SingletonService@1165b38\\n\\n        //\\uB458\\uC774 \\uC815\\uB9D0 \\uB3D9\\uC77C\\uD55C\\uC9C0 \\uAC80\\uC99D\\n        Assertions.assertThat(singletonService1).isSameAs(singletonService2);\\n        //.isSameAs: \\uC790\\uBC14 ==\\uC73C\\uB85C \\uBE44\\uAD50\\uD558\\uB294 \\uAC83\\uACFC \\uB3D9\\uC77C\\n        //.isEqualTo: \\uC790\\uBC14\\uC758 .equals \\uBA54\\uC18C\\uB4DC\\uB85C \\uBE44\\uAD50\\uD558\\uB294 \\uAC83\\uACFC \\uB3D9\\uC77C\\n    }\\n\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC758 \\uBB38\\uC81C\\uC810\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC744 \\uAD6C\\uD604\\uD558\\uB294 \\uCF54\\uB4DC \\uC790\\uCCB4\\uAC00 \\uB9CE\\uC774 \\uB4E4\\uC5B4\\uAC04\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC758\\uC874\\uAD00\\uACC4\\uC0C1 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uAC00 \\uAD6C\\uCCB4 \\uD074\\uB798\\uC2A4\\uC5D0 \\uC758\\uC874\\uD55C\\uB2E4. -> DIP \\uC704\\uBC18\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uAC00 \\uAD6C\\uCCB4 \\uD074\\uB798\\uC2A4\\uC5D0 \\uC758\\uC874\\uD574\\uC11C OCP \\uC6D0\\uCE59\\uC744 \\uC704\\uBC18\\uD560 \\uAC00\\uB2A5\\uC131\\uC774 \\uB192\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD14C\\uC2A4\\uD2B8\\uD558\\uAE30 \\uC5B4\\uB835\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB0B4\\uBD80 \\uC18D\\uC131\\uC744 \\uBCC0\\uACBD\\uD558\\uAC70\\uB098 \\uCD08\\uAE30\\uD654 \\uD558\\uAE30 \\uC5B4\\uB835\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"private \\uC0DD\\uC131\\uC790\\uB85C \\uC790\\uC2DD \\uD074\\uB798\\uC2A4\\uB97C \\uB9CC\\uB4E4\\uAE30 \\uC5B4\\uB835\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uACB0\\uB860\\uC801\\uC73C\\uB85C \\uC720\\uC5F0\\uC131\\uC774 \\uB5A8\\uC5B4\\uC9C4\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC548\\uD2F0\\uD328\\uD134\\uC73C\\uB85C \\uBD88\\uB9AC\\uAE30\\uB3C4 \\uD55C\\uB2E4.\")))), mdx(\"h2\", null, \"\\uC2F1\\uAE00\\uD1A4 \\uCEE8\\uD14C\\uC774\\uB108\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 \\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC758 \\uBB38\\uC81C\\uC810\\uC744 \\uD574\\uACB0\\uD558\\uBA74\\uC11C, \\uAC1D\\uCCB4 \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uC2F1\\uAE00\\uD1A4(1\\uAC1C\\uB9CC \\uC0DD\\uC131)\\uC73C\\uB85C \\uAD00\\uB9AC\\uD55C\\uB2E4. \\uD604\\uC7AC\\uAE4C\\uC9C0 \\uC6B0\\uB9AC\\uAC00 \\uD559\\uC2B5\\uD55C \\uC2A4\\uD504\\uB9C1 \\uBE48\\uC774 \\uC2F1\\uAE00\\uD1A4\\uC73C\\uB85C \\uAD00\\uB9AC\\uB418\\uB294 \\uBE48\\uC774\\uB2E4.\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uCEE8\\uD14C\\uC774\\uB108\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 \\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC744 \\uC801\\uC6A9\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4, \\uAC1D\\uCCB4 \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uC2F1\\uAE00\\uD1A4\\uC73C\\uB85C \\uAD00\\uB9AC\\uD55C\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uC5D0 \\uBE48\\uC744 \\uB4F1\\uB85D\\uD560 \\uB54C \\uBE48 \\uAC1D\\uCCB4\\uB97C (\\uB2E8 \\uD558\\uB098\\uB9CC)\\uC0DD\\uC131\\uD558\\uC5EC \\uC870\\uD68C\\uD560 \\uB54C\\uB9C8\\uB2E4 \\uD574\\uB2F9 \\uAC1D\\uCCB4\\uB97C \\uC870\\uD68C\\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8 \\uC2A4\\uD504\\uB9C1\\uC758 \\uAE30\\uBCF8 \\uBE48 \\uB4F1\\uB85D \\uBC29\\uC2DD\\uC740 \\uC2F1\\uAE00\\uD1A4(99.9%)\\uC774\\uC9C0\\uB9CC, \\uC2F1\\uAE00\\uD1A4 \\uBC29\\uC2DD\\uB9CC\\uC744 \\uC9C0\\uC6D0\\uD558\\uB294 \\uAC83\\uC740 \\uC544\\uB2C8\\uB2E4. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC694\\uCCAD\\uD560 \\uB54C\\uB9C8\\uB2E4 \\uC0C8\\uB85C\\uC6B4 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\uD574\\uC11C \\uBC18\\uD658\\uD558\\uB294 \\uAE30\\uB2A5\\uB3C4 \\uC81C\\uACF5\\uD55C\\uB2E4(\\uB4A4\\uC758 \\uBE48 \\uC2A4\\uCF54\\uD504\\uC5D0\\uC11C \\uC124\\uBA85).\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uB294 \\uC2F1\\uAE00\\uD1A4 \\uCEE8\\uD14C\\uC774\\uB108 \\uC5ED\\uD560\\uC744 \\uD55C\\uB2E4. \\uC774\\uB807\\uAC8C \\uC2F1\\uAE00\\uD1A4 \\uAC1D\\uCCB4\\uB97C \\uC0DD\\uC131\\uD558\\uACE0 \\uAD00\\uB9AC\\uD558\\uB294 \\uAE30\\uB2A5\\uC744 \\uC2F1\\uAE00\\uD1A4 \\uB808\\uC9C0\\uC2A4\\uD2B8\\uB9AC\\uB77C \\uD55C\\uB2E4.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uC758 \\uC774\\uB7F0 \\uAE30\\uB2A5 \\uB355\\uBD84\\uC5D0 \\uC2F1\\uAE00\\uD134 \\uD328\\uD134\\uC758 \\uBAA8\\uB4E0 \\uB2E8\\uC810\\uC744 \\uD574\\uACB0\\uD558\\uBA74\\uC11C \\uAC1D\\uCCB4\\uB97C \\uC2F1\\uAE00\\uD1A4\\uC73C\\uB85C \\uC720\\uC9C0\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC744 \\uAD6C\\uD604\\uD558\\uAE30 \\uC704\\uD55C \\uBCF5\\uC7A1\\uD55C \\uCF54\\uB4DC\\uB97C \\uC791\\uC131\\uD558\\uC9C0 \\uC54A\\uC544\\uB3C4 \\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DIP,OCP, \\uD14C\\uC2A4\\uD2B8, private \\uC0DD\\uC131\\uC790\\uB85C \\uBD80\\uD130 \\uC790\\uC720\\uB86D\\uAC8C \\uC2F1\\uAE00\\uD1A4\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB2E4.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108 \\uD65C\\uC6A9\"))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.DisplayName;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.context.ApplicationContext;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport start.first.AppConfigSpring;\\nimport start.first.member.MemberService;\\n\\npublic class SingletonTest {\\n    \\n    //\\uC804\\uB7B5(\\uC2A4\\uD504\\uB9C1 \\uC5C6\\uB294 \\uC21C\\uC218\\uD55C DI \\uCEE8\\uD14C\\uC774\\uB108, \\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC744 \\uC801\\uC6A9\\uD55C \\uAC1D\\uCCB4 \\uC0AC\\uC6A9)\\n    \\n    @Test\\n    @DisplayName(\\\"\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108\\uC640 \\uC2F1\\uAE00\\uD1A4\\\")\\n    void springContainer(){\\n        \\n        //\\uC2A4\\uD504\\uB9C1 \\uCEE8\\uD14C\\uC774\\uB108 \\uC0DD\\uC131\\n        ApplicationContext ac = new AnnotationConfigApplicationContext(AppConfigSpring.class);\\n        \\n        MemberService memberService1 = ac.getBean(\\\"memberService\\\",MemberService.class);\\n        MemberService memberService2 = ac.getBean(\\\"memberService\\\",MemberService.class);\\n\\n        //\\uB458\\uC758 \\uCC38\\uC870\\uAC12\\uC774 \\uB3D9\\uC77C\\uD55C\\uB2E4.\\n        System.out.println(\\\"memberService1 = \\\" + memberService1); \\n        //memberService1 = start.first.member.MemberServiceImpl@23fb172e\\n        System.out.println(\\\"memberService2 = \\\" + memberService2); \\n        //memberService2 = start.first.member.MemberServiceImpl@23fb172e\\n\\n        //\\uB458\\uC774 \\uC815\\uB9D0 \\uB3D9\\uC77C\\uD55C\\uC9C0 \\uAC80\\uC99D\\n        Assertions.assertThat(memberService1).isSameAs(memberService2);\\n    }\\n\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uC2F1\\uAE00\\uD1A4 \\uBC29\\uC2DD\\uC758 \\uC8FC\\uC758\\uC810\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uBB34\\uC0C1\\uD0DC(stateless)\\uB85C \\uC124\\uACC4\\uD574\\uC57C \\uD55C\\uB2E4.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2F1\\uAE00\\uD1A4 \\uD328\\uD134\\uC774\\uB4E0, \\uC2A4\\uD504\\uB9C1 \\uAC19\\uC740 \\uC2F1\\uAE00\\uD1A4 \\uCEE8\\uD14C\\uC774\\uB108\\uB97C \\uC0AC\\uC6A9\\uD558\\uB4E0, \\uAC1D\\uCCB4 \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uD558\\uB098\\uB9CC \\uC0DD\\uC131\\uD574\\uC11C \\uACF5\\uC720\\uD558\\uB294 \\uC2F1\\uAE00\\uD1A4 \\uBC29\\uC2DD\\uC740 \\uC5EC\\uB7EC \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uAC00 \\uD558\\uB098\\uC758 \\uAC19\\uC740 \\uAC1D\\uCCB4 \\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uACF5\\uC720\\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uC2F1\\uAE00\\uD1A4 \\uAC1D\\uCCB4\\uB294 \\uC0C1\\uD0DC\\uB97C \\uC720\\uC9C0(stateful)\\uD558\\uAC8C \\uC124\\uACC4\\uD558\\uBA74 \\uC548\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD2B9\\uC815 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC5D0 \\uC758\\uC874\\uC801\\uC778 \\uD544\\uB4DC\\uAC00 \\uC788\\uC73C\\uBA74 \\uC548\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD2B9\\uC815 \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uAC00 \\uAC12\\uC744 \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uB294 \\uD544\\uB4DC\\uAC00 \\uC788\\uC73C\\uBA74 \\uC548\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC00\\uAE09\\uC801 \\uC77D\\uAE30\\uB9CC \\uAC00\\uB2A5\\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD544\\uB4DC \\uB300\\uC2E0\\uC5D0 \\uC790\\uBC14\\uC5D0\\uC11C \\uACF5\\uC720\\uB418\\uC9C0 \\uC54A\\uB294, \\uC9C0\\uC5ED\\uBCC0\\uC218, \\uD30C\\uB77C\\uBBF8\\uD130, ThreadLocal \\uB4F1\\uC744 \\uC0AC\\uC6A9\\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2A4\\uD504\\uB9C1 \\uBE48\\uC758 \\uD544\\uB4DC\\uC5D0 \\uACF5\\uC720 \\uAC12\\uC744 \\uC124\\uC815\\uD558\\uBA74 \\uC815\\uB9D0 \\uD070 \\uC7A5\\uC560\\uAC00 \\uBC1C\\uC0DD\\uD560 \\uC218 \\uC788\\uB2E4.\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uC0C1\\uD0DC\\uB97C \\uC720\\uC9C0\\uD558\\uB3C4\\uB85D \\uC124\\uACC4\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uB2E8\\uC21C\\uD55C \\uC124\\uBA85\\uC744 \\uC704\\uD574 \\uC2E4\\uC81C Thread\\uB97C \\uC0AC\\uC6A9\\uD558\\uC9C0\\uB294 \\uC54A\\uC558\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StatefulService\"), \"\\uC758 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"price\"), \" \\uD544\\uB4DC\\uB294 \\uACF5\\uC720\\uB418\\uB294 \\uD544\\uB4DC\\uC778\\uB370, \\uD074\\uB77C\\uC774\\uC5B8\\uD2B8\\uC5D0 \\uB530\\uB77C \\uAC12\\uC774 \\uBCC0\\uACBD\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uC2E4\\uBB34\\uC5D0\\uC11C\\uB3C4 \\uC774\\uB7F0 \\uACBD\\uC6B0\\uAC00 \\uC885\\uC885 \\uBC1C\\uC0DD\\uD558\\uB294\\uB370, \\uC815\\uB9D0 \\uD574\\uACB0\\uD558\\uAE30 \\uC5B4\\uB824\\uC6B4 \\uD070 \\uBB38\\uC81C\\uB4E4\\uC774 \\uD130\\uC9C4\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StatefulService.java\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\npublic class StatefulService {\\n\\n    private int price; //\\uC0C1\\uD0DC\\uB97C \\uC720\\uC9C0\\uD558\\uB294 \\uD544\\uB4DC\\n\\n    public void order(String name, int price){\\n        System.out.println(\\\"name = \\\" + name + \\\" price = \\\" + price);\\n\\n        //\\uC5EC\\uAE30\\uAC00 \\uBB38\\uC81C\\uAC00 \\uB41C\\uB2E4.\\n        this.price=price;\\n    }\\n\\n    public int getPrice(){\\n        return price;\\n    }\\n}\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StatefulServiceTest.java\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.context.ApplicationContext;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport org.springframework.context.annotation.Bean;\\n\\nclass StatefulServiceTest {\\n\\n    //\\uD14C\\uC2A4\\uD2B8\\uC6A9 AppConfig\\n    static class TestConfig{\\n        @Bean\\n        public StatefulService statefulService(){\\n            return new StatefulService();\\n        }\\n    }\\n\\n    @Test\\n    void statefulServiceSingleton(){\\n\\n\\n        ApplicationContext ac = new AnnotationConfigApplicationContext(TestConfig.class);\\n        StatefulService statefulService1 = ac.getBean(StatefulService.class);\\n        StatefulService statefulService2 = ac.getBean(StatefulService.class);\\n       \\n        //TreadA: A\\uC0AC\\uC6A9\\uC790\\uAC00 10,000\\uC6D0 \\uC8FC\\uBB38\\n        statefulService1.order(\\\"userA\\\",10000);\\n\\n        //TreadB: B\\uC0AC\\uC6A9\\uC790\\uAC00 20,000\\uC6D0 \\uC8FC\\uBB38\\n        statefulService2.order(\\\"userA\\\",20000);\\n\\n        //TreadA: \\uC0AC\\uC6A9\\uC790A\\uAC00 \\uC8FC\\uBB38\\uD55C \\uAE08\\uC561 \\uC870\\uD68C\\n        int price = statefulService1.getPrice();\\n        //B\\uC0AC\\uC6A9\\uC790\\uAC00 \\uC8FC\\uBB38\\uD558\\uBA74\\uC11C price\\uAC00 20000\\uC73C\\uB85C \\uBC14\\uB00C\\uC5B4 10000\\uC774 \\uC544\\uB2CC 20000\\uC774 \\uCD9C\\uB825\\uB41C\\uB2E4.\\n        System.out.println(\\\"price = \\\" + price);  //price = 20000\\n\\n        Assertions.assertThat(statefulService1.getPrice()).isEqualTo(20000);\\n\\n    }\\n\\n}\\n\")))), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\uBB34\\uC0C1\\uD0DC\\uB85C \\uC124\\uACC4\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StatelessService.java\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\npublic class StatelessService {\\n\\n    public int order(String name, int price){\\n        System.out.println(\\\"name = \\\" + name + \\\" price = \\\" + price);\\n        return price;\\n   }\\n}\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"StatelessServiceTest.java\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"package start.first.singleton;\\n\\nimport org.assertj.core.api.Assertions;\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.context.ApplicationContext;\\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\\nimport org.springframework.context.annotation.Bean;\\n\\n\\nclass StatelessServiceTest {\\n\\n    //\\uD14C\\uC2A4\\uD2B8\\uC6A9 AppConfig\\n    static class TestConfig{\\n        @Bean\\n        public StatelessService statelessService(){\\n            return new StatelessService();\\n        }\\n    }\\n\\n    @Test\\n    void statelessServiceSingleton(){\\n\\n        ApplicationContext ac = new AnnotationConfigApplicationContext(StatelessServiceTest.TestConfig.class);\\n        StatelessService statelessService1 = ac.getBean(StatelessService.class);\\n        StatelessService statelessService2 = ac.getBean(StatelessService.class);\\n\\n        //\\uC544\\uB798\\uC640 \\uAC19\\uC774 \\uAC00\\uACA9\\uC744 \\uAC01\\uAC01 userAPrice, userBPrice \\uB77C\\uB294 \\uC9C0\\uC5ED \\uBCC0\\uC218\\uC5D0 \\uB2F4\\uB294\\uB2E4.\\n        //TreadA: A\\uC0AC\\uC6A9\\uC790\\uAC00 10,000\\uC6D0 \\uC8FC\\uBB38\\n        int userAPrice = statelessService1.order(\\\"userA\\\",10000);\\n\\n        //TreadB: B\\uC0AC\\uC6A9\\uC790\\uAC00 20,000\\uC6D0 \\uC8FC\\uBB38\\n        int userBPrice = statelessService2.order(\\\"userB\\\",20000);\\n\\n        //A\\uC0AC\\uC6A9\\uC790\\uAC00 \\uC8FC\\uBB38\\uD55C \\uAE08\\uC561\\n        System.out.println(\\\"price = \\\" + userAPrice); //10000\\n\\n        Assertions.assertThat(userAPrice).isEqualTo(10000);\\n\\n    }\\n\\n}\\n\")))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h2\", null, \"\\uCC38\\uACE0\"), mdx(\"p\", null, \"\\uC2A4\\uD504\\uB9C1 \\uD575\\uC2EC \\uC6D0\\uB9AC - \\uAE30\\uBCF8\\uD3B8, \\uAE40\\uC601\\uD55C, \\uC778\\uD504\\uB7F0\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"웹 애플리케이션과 싱글톤 대부분의 스프링 애플리케이션은 웹 애플리케이션이나 웹이 아닌 애플리케이션도 개발 가능하다. 웹 애플리케이션은 보통 여러 고객이 동시에 요청을 한다. 아래 코드의 경우에 2명이 요청하면 2개의 객체가, 5명이 요청하면…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/spring-07-spring-싱글톤","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","3090400250","318001574"]}